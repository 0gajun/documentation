{
	"info": {
		"_postman_id": "05a8e9ca-715c-4b08-a51f-64f2b8f74387",
		"name": "Datadog API Collection",
		"description": "Top Level Folder For Datadog API calls",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Authentication Check",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/validate?api_key={{dd_api_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"validate"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								}
							]
						},
						"description": "This GET call just checks to see if an API call key is valid."
					},
					"response": []
				}
			],
			"description": "All requests to Datadog's API must be authenticated. Requests that write data require reporting access and require an API key. Requests that read data require full access and also require an application key."
		},
		{
			"name": "Checks",
			"item": [
				{
					"name": "Enter Check Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"check\": \"app.is_ok\",\n      \"host_name\": \"my_hostname\",\n      \"status\": 0\n  }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/check_run?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"check_run"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "This POST call allows for you to POST check statuses for use with monitors"
					},
					"response": []
				}
			],
			"description": "The service check endpoint allows you to post check statuses for use with monitors."
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Create a Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"message\" : \"There is a problem with the database.\",\n      \"handle\":\"email@domain.com\"\n  }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/comments?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"comments"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "This POST call allows for you to POST status messages, or reply to another thread (if related_event_id is passed)"
					},
					"response": []
				},
				{
					"name": "Edit a Comment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"message\" : \"Try Changing the Wording\"\n  }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/comments/:EVENT_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"comments",
								":EVENT_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "EVENT_ID",
									"value": ""
								}
							]
						},
						"description": "This POST call allows for you to change a previously posted comment by commentId"
					},
					"response": []
				},
				{
					"name": "Reply To Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"message\" : \"Try embedded comment to previous post\",\n      \"handle\":\"email@domain.com\",\n      \"related_event_id\":\"<<INSERT_EVENT_ID>>\"\n  }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/comments?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"comments"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "This POST call allows for you to POST status messages to a previous post via ID."
					},
					"response": []
				},
				{
					"name": "Delete a Comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/comments/:EVENT_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"comments",
								":EVENT_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "EVENT_ID",
									"value": ""
								}
							]
						},
						"description": "This POST call allows for you to DELETE a previously posted comment by commentId"
					},
					"response": []
				}
			],
			"description": "Comments are essentially special forms of events that appear in the stream. They can start a new discussion thread or optionally, reply in another thread.\n\nARGUMENTS\n\n* message [required]\n     **The comment text.\n* handle [optional, default=application key owner]\n     **The handle of the user making the comment.\n* related_event_id [optional, default=None]\n     **The id of another comment or event to reply to"
		},
		{
			"name": "Dashboards",
			"item": [
				{
					"name": "Create a Dashboard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"title\" : \"Average Memory Free Shell\",\n      \"widgets\" : [{\n          \"definition\": {\n              \"type\": \"timeseries\",\n              \"requests\": [\n                  {\"q\": \"avg:system.mem.free{*}\"}\n              ],\n              \"title\": \"Average Memory Free\"\n          }\n      }],\n      \"layout_type\": \"ordered\",\n      \"description\" : \"A dashboard with memory info.\",\n      \"is_read_only\": true,\n      \"notify_list\": [\"user@domain.com\"],\n      \"template_variables\": [{\n          \"name\": \"host1\",\n          \"prefix\": \"host\",\n          \"default\": \"my-host\"\n      }]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Arguments\n\ntitle [required]:\nTitle of the dashboard.\n\nwidgets [required]:\nList of widgets to display on the dashboard. \n\nWidget definitions follow this form:\ndefinition [required]:\nDefinition of the widget.\n\nid [optional, default=auto-generated integer]:\nID of the widget.\n\nlayout_type [required]:\nLayout type of the dashboard. Available values are: ordered (previous timeboard) or free (previous screenboard layout)\n\ndescription [optional, default=None]:\nDescription of the dashboard.\n\nis_read_only [optional, default=False]:\nWhether this dashboard is read-only. If True, only the author and admins can make changes to it.\n\nnotify_list [optional, default=None]:\nList of handles of users to notify when changes are made to this dashboard.\n\ntemplate_variables [optional, default=None]:\nList of template variables for this dashboard. \n\nTemplate variable definitions follow this form:\n\nname [required]:\nThe name of the variable.\n\ndefault [optional, default=None]:\nThe default value for the template variable on dashboard load.\n\nprefix [optional, default=None]:\nThe tag prefix associated with the variable. Only tags with this prefix appear in the variable dropdown."
					},
					"response": []
				},
				{
					"name": "Update a Dashboard",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"title\" : \"Sum of Memory Free 2\",\n      \"widgets\" : [{\n          \"definition\": {\n              \"type\": \"timeseries\",\n              \"requests\": [\n                  {\"q\": \"sum:system.mem.free{*}\"}\n              ],\n              \"title\": \"Sum Memory Free Shell\"\n          }\n      }],\n      \"layout_type\": \"ordered\",\n      \"description\" : \"An updated dashboard with memory info.\",\n      \"is_read_only\": true,\n      \"notify_list\": [\"user@domain.com\"],\n      \"template_variables\": [{\n          \"name\": \"host1\",\n          \"prefix\": \"host\",\n          \"default\": \"my-host\"\n      }]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/:DASHBOARD_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":DASHBOARD_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_ID",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Dashboard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/:DASHBOARD_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":DASHBOARD_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_ID",
									"value": ""
								}
							]
						},
						"description": "Delete an existing dashboard. This end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Get a Dashboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/dashboard/:DASHBOARD_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":DASHBOARD_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_ID",
									"value": ""
								}
							]
						},
						"description": "Fetch an existing dashboard’s definition.\n\nArguments\nThis end point takes no JSON arguments."
					},
					"response": []
				}
			]
		},
		{
			"name": "Dashboard Lists",
			"item": [
				{
					"name": "Get a Dashboard List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": ""
								}
							]
						},
						"description": "Fetch an existing dashboard list’s definition.\n\nARGUMENTS\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Get all Dashboard Lists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Fetch all of your existing dashboard list definitions.\n\nARGUMENTS\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Create a Dashboard List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Create an empty dashboard list.\n\nArguments\nname [required]: The name of the dashboard list."
					},
					"response": []
				},
				{
					"name": "Update a Dashboard List",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"My Updated Dashboard List\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": ""
								}
							]
						},
						"description": "Update the name of a dashboard list\n\nArguments\nname [required]: The name of the dashboard list."
					},
					"response": []
				},
				{
					"name": "Delete a Dashboard List",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": ""
								}
							]
						},
						"description": "Delete an existing dashboard list.\n\nARGUMENTS\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Get Items of a Dashboard List",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID",
								"dashboards"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": ""
								}
							]
						},
						"description": "Fetch the dashboard list’s dashboard definitions.\n\nARGUMENTS\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Add Items to Dashboard List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"dashboards\": [\n            {\n                \"type\": \"custom_screenboard\",\n                \"id\": 1414\n            },\n            {\n                \"type\": \"custom_timeboard\",\n                \"id\": 5858\n            },\n            {\n                \"type\": \"integration_screenboard\",\n                \"id\": 67\n            },\n            {\n                \"type\": \"integration_timeboard\",\n                \"id\": 5\n            },\n            {\n                \"type\": \"host_timeboard\",\n                \"id\": 123456789\n            }\n        ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID",
								"dashboards"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": ""
								}
							]
						},
						"description": "Add dashboards to an existing dashboard list.\n\nARGUMENTS\n\ndashboards [required]: A list of dashboards to add to the list. Dashboard definitions follow this form:\n\ntype [required]: The type of the dashboard. The type must be one of:\n\n\"custom_timeboard\"\n\"custom_screenboard\"\n\"integration_screenboard\"\n\"integration_timeboard\"\n\"host_timeboard\"\nid [required]: The id of the dashboard."
					},
					"response": []
				},
				{
					"name": "Update Items of a Dashboard List",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"dashboards\": [\n            {\n                \"type\": \"custom_screenboard\",\n                \"id\": 1414\n            },\n            {\n                \"type\": \"custom_timeboard\",\n                \"id\": 5858\n            },\n            {\n                \"type\": \"integration_screenboard\",\n                \"id\": 67\n            },\n            {\n                \"type\": \"integration_timeboard\",\n                \"id\": 5\n            },\n            {\n                \"type\": \"host_timeboard\",\n                \"id\": 123456789\n            }\n        ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID",
								"dashboards"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": ""
								}
							]
						},
						"description": "Update dashboards of an existing dashboard list.\n\nARGUMENTS\ndashboards [required]: The new list of dashboards for the dashboard list. Dashboard definitions follow this form:\n\ntype [required]: The type of the dashboard. The type must be one of:\n\n\"custom_timeboard\"\n\"custom_screenboard\"\n\"integration_screenboard\"\n\"integration_timeboard\"\n\"host_timeboard\"\nid [required]: The id of the dashboard."
					},
					"response": []
				},
				{
					"name": "Delete Items from a Dashboard List",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"dashboards\": [\n            {\n                \"type\": \"custom_screenboard\",\n                \"id\": 1414\n            },\n            {\n                \"type\": \"custom_timeboard\",\n                \"id\": 5858\n            },\n            {\n                \"type\": \"integration_screenboard\",\n                \"id\": 67\n            },\n            {\n                \"type\": \"integration_timeboard\",\n                \"id\": 5\n            },\n            {\n                \"type\": \"host_timeboard\",\n                \"id\": 123456789\n            }\n        ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID",
								"dashboards"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": ""
								}
							]
						},
						"description": "Delete dashboards from an existing dashboard list.\n\nARGUMENTS\ndashboards [required]: A list of dashboards to remove from the list. Dashboard definitions follow this form:\n\ntype [required]: The type of the dashboard. The type must be one of:\n\n\"custom_timeboard\"\n\"custom_screenboard\"\n\"integration_screenboard\"\n\"integration_timeboard\"\n\"host_timeboard\"\nid [required]: The id of the dashboard."
					},
					"response": []
				}
			],
			"description": "Interact with your dashboard lists through the API to make it easier to organize, find, and share all of your dashboards with your team and organization."
		},
		{
			"name": "Downtimes",
			"item": [
				{
					"name": "Schedule monitor downtime",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7dbab6ff-c2b2-42d2-9251-42f2247d8762",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = 30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start={{from_ts}}&end={{to_ts}}&type=weeks&period=1&week_days=Mon,Tue,Wed,Thu,Fri&until_date={{to_ts}}&scope=region:midwest",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start",
									"value": "{{from_ts}}"
								},
								{
									"key": "end",
									"value": "{{to_ts}}"
								},
								{
									"key": "type",
									"value": "weeks"
								},
								{
									"key": "period",
									"value": "1"
								},
								{
									"key": "week_days",
									"value": "Mon,Tue,Wed,Thu,Fri"
								},
								{
									"key": "until_date",
									"value": "{{to_ts}}"
								},
								{
									"key": "scope",
									"value": "region:midwest"
								}
							]
						},
						"description": "Schedule a single Downtime.\n\nARGUMENTS\n\n* scope [required]\nThe scope(s) to which the downtime will apply, e.g. 'host:app2'. Provide multiple scopes as a comma-separated list, e.g. 'env:dev,env:prod'. The resulting downtime applies to sources that matches ALL provided scopes (i.e. env:dev AND env:prod), NOT any of them.\n\n*monitor_id [optional, default=None]\nA single monitor to which the downtime will apply. If not provided, the downtime will apply to all monitors.\n\n*start [optional, default=None]\nPOSIX timestamp to start the downtime. If not provided, the downtime starts the moment it is created.\n\n*end [optional, default=None]\nPOSIX timestamp to end the downtime. If not provided, the downtime will be in effect indefinitely (i.e. until you cancel it).\n\n*message [optional, default=None]\nA message to include with notifications for this downtime. Email notifications can be sent to specific users by using the same '@username' notation as events\n\n*monitor_id [optional, default=None]\nThe id of a specific monitor to apply the downtime to.\n\n*recurrence [optional, default=None]\nAn object defining the recurrence of the downtime with a variety of parameters:\n\n*type the type of recurrence. Choose from: days, weeks, months, years.\n\n*period how often to repeat as an integer. For example to repeat every 3 days, select a type of days and a period of 3.\n\n*week_days (optional) a list of week days to repeat on. Choose from: Mon, Tue, Wed, Thu, Fri, Sat or Sun. Only applicable when type is weeks. First letter must be capitalized.\n\n*until_occurrences (optional) how many times the downtime will be rescheduled. until_occurences and \n\n*until_date are mutually exclusive\nuntil_date (optional) the date at which the recurrence should end as a POSIX timestmap. until_occurences and until_date are mutually exclusive\n\n*timezone [optional, default=UTC]\nThe timezone for the downtime."
					},
					"response": []
				},
				{
					"name": "Update monitor downtime",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "52ac75f8-b1ab-4145-b9fc-eeeb5cfc64aa",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = 60",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime/:DOWNTIME_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start={{from_ts}}&end={{to_ts}}&type=weeks&period=1&week_days=Mon,Tue,Wed,Thu,Fri,Sat&until_date={{to_ts}}&scope=region:midwest",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								":DOWNTIME_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start",
									"value": "{{from_ts}}"
								},
								{
									"key": "end",
									"value": "{{to_ts}}"
								},
								{
									"key": "type",
									"value": "weeks"
								},
								{
									"key": "period",
									"value": "1"
								},
								{
									"key": "week_days",
									"value": "Mon,Tue,Wed,Thu,Fri,Sat"
								},
								{
									"key": "until_date",
									"value": "{{to_ts}}"
								},
								{
									"key": "scope",
									"value": "region:midwest"
								}
							],
							"variable": [
								{
									"key": "DOWNTIME_ID",
									"value": ""
								}
							]
						},
						"description": "Update a single Downtime by downtime_id.\n\nARGUMENTS\n\n* scope [required]\nThe scope(s) to which the downtime will apply, e.g. 'host:app2'. Provide multiple scopes as a comma-separated list, e.g. 'env:dev,env:prod'. The resulting downtime applies to sources that matches ALL provided scopes (i.e. env:dev AND env:prod), NOT any of them.\n\n*monitor_id [optional, default=None]\nA single monitor to which the downtime will apply. If not provided, the downtime will apply to all monitors.\n\n*start [optional, default=None]\nPOSIX timestamp to start the downtime. If not provided, the downtime starts the moment it is created.\n\n*end [optional, default=None]\nPOSIX timestamp to end the downtime. If not provided, the downtime will be in effect indefinitely (i.e. until you cancel it).\n\n*message [optional, default=None]\nA message to include with notifications for this downtime. Email notifications can be sent to specific users by using the same '@username' notation as events\n\n*monitor_id [optional, default=None]\nThe id of a specific monitor to apply the downtime to.\n\n*recurrence [optional, default=None]\nAn object defining the recurrence of the downtime with a variety of parameters:\n\n*type the type of recurrence. Choose from: days, weeks, months, years.\n\n*period how often to repeat as an integer. For example to repeat every 3 days, select a type of days and a period of 3.\n\n*week_days (optional) a list of week days to repeat on. Choose from: Mon, Tue, Wed, Thu, Fri, Sat or Sun. Only applicable when type is weeks. First letter must be capitalized.\n\n*until_occurrences (optional) how many times the downtime will be rescheduled. until_occurences and \n\n*until_date are mutually exclusive\nuntil_date (optional) the date at which the recurrence should end as a POSIX timestmap. until_occurences and until_date are mutually exclusive\n\n*timezone [optional, default=UTC]\nThe timezone for the downtime."
					},
					"response": []
				},
				{
					"name": "Cancel monitor downtime",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime/:DOWNTIME_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								":DOWNTIME_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "DOWNTIME_ID",
									"value": ""
								}
							]
						},
						"description": "DELETE a Downtime Detail by downtime_id"
					},
					"response": []
				},
				{
					"name": "Cancel monitor downtimes By Scope",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"scope\":\"region:midwest\"}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime/cancel/by_scope?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								"cancel",
								"by_scope"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "DELETE all Downtimes that match the scope of X"
					},
					"response": []
				},
				{
					"name": "GET a monitor downtime",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime/:DOWNTIME_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								":DOWNTIME_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "DOWNTIME_ID",
									"value": ""
								}
							]
						},
						"description": "Get Downtime Detail by downtime_id"
					},
					"response": []
				},
				{
					"name": "GET all mointor downtimes",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Get All Scheduled Downtimes"
					},
					"response": []
				}
			],
			"description": "Downtiming gives you greater control over monitor notifications by allowing you to globally exclude scopes from alerting. Downtime settings, which can be scheduled with start and end times, prevent all alerting related to specified Datadog tags."
		},
		{
			"name": "Embeddable Graphs",
			"item": [
				{
					"name": "Get all embeddable graphs",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Gets a list of previously created embeddable graphs.\n\nReturns: A JSON list containing information on previously created embeds from both the UI and the API. Each JSON graph response is in the same format as returned by GET api/v1/graph/embed/.\n\nARGUMENTS\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Create embed",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "graph_json",
									"value": "{\"requests\":[{\"q\":\"avg:system.load.1{*}\"}],\"viz\":\"timeseries\",\"events\":[]}",
									"type": "text"
								},
								{
									"key": "timeframe",
									"value": "1_hour",
									"type": "text"
								},
								{
									"key": "size",
									"value": "medium",
									"type": "text"
								},
								{
									"key": "legend",
									"value": "yes",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Creates a new embeddable graph.\n\nReturns: A JSON consisting of the same elements returned by GET api/v1/graph/embed/:embed_id. On failure, the return value will be a JSON containing an error message {errors: [messages]}.\n\nNote: If an embed already exists for the exact same query in a given organization, the older embed will be returned instead of creating a new embed.\n\nARGUMENTS\n\n*graph_json [required]\nThe graph definition in JSON. Same format that is available on the JSON tab of the graph editor\n\n*timeframe [optional, default=1_hour]\nThe timegrame for the graph. Must be one of 1_hour, 4_hours, 1_day, 2_days, and 1_week.\n\n*size [optional, default=medium]\nThe size of the graph. Must be one of small, medium, large, and xlarge.\n\n*legend [optional, default=no]\nThe flag determining if the graph includes a legend. Must be one of yes or no.\n\n*title [optional, default=Embed created through API]\nDetermines graph title. Must be at least 1 character."
					},
					"response": []
				},
				{
					"name": "GET specific embed",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed/:EMBED_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":EMBED_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "EMBED_ID",
									"value": ""
								}
							]
						},
						"description": "Get the HTML fragment for a previously generated embed with embed_id.\n\nReturns: A JSON object with 8 elements:\n\nembed_id: Token of the embed\ngraph_title: Tile of the graph\ndash_name: Name of the dashboard the graph is on (null if none)\ndash_url: URL of the dashboard the graph is on (null if none)\nshared_by: ID of the use who shared the embed\nhtml: HTML fragment for the embed (iframe)\nrevoked: Boolean flag for whther or not the embed is revoked\nOn failure, the return value is a JSON containing an error message {errors: [messages]}.\n\nARGUMENTS\n\nsize [optional, default=medium]:\nThe size of the graph. Must be one:\nsmall,\nmedium,\nlarge,\nxlarge.\n\nlegend [optional, default=no]:\nThe flag determining if the graph includes a legend. Must be one of yes or no.\n\ntemplate_variables [optional, default=None]:\nReplace template variables in queries with form $var. To replace $var with val, use var=val as a parameter for each template variable you wish to replace. If any template variables are missing values in the iframe source url, then (*) is used as the value."
					},
					"response": []
				},
				{
					"name": "Enable embed",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed/:EMBED_ID/enable?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":EMBED_ID",
								"enable"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "EMBED_ID",
									"value": ""
								}
							]
						},
						"description": "Enable A Specific Embed by embed_id"
					},
					"response": []
				},
				{
					"name": "Revoke embed",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed/:EMBED_ID/revoke?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":EMBED_ID",
								"revoke"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "EMBED_ID",
									"value": ""
								}
							]
						},
						"description": "Revoke A Specific Embed by embed_id"
					},
					"response": []
				}
			],
			"description": "You can interact with embeddable graphs through the API."
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Post an Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"alert_type\": \"success\",\n        \"title\": \"prod auth build #{{$randomInt}} succeeded on PROD\",\n       \n        \"text\": \"Jenkins Build #{{$randomInt}} completed (16.48 secs) without error.\",\n        \"tags\": [\n           \n            \"result:success\"\n        ],\n        \"device_name\": null,\n        \"priority\": \"low\",\n        \"source_type_name\":\"jenkins\"\n    \n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/events?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"events"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "This end point allows you to post events to the stream. You can tag them, set priority and event aggregate them with other events.\n\nARGUMENTS\n\n*title [required]\nThe event title. Limited to 100 characters.\n\n*text [required]\nThe body of the event. Limited to 4000 characters. The text supports markdown.\n\n*date_happened [optional, default=now]\nPOSIX timestamp of the event.\n\n*priority [optional, default='normal']\nThe priority of the event ('normal' or 'low').\n\n*host [optional, default=None]\nHost name to associate with the event.\n\n*tags [optional, default=None]\nA list of tags to apply to the event.\n\n*alert_type [optional, default='info']\n\"error\", \"warning\", \"info\" or \"success\".\n\n*aggregation_key [optional, default=None]\nAn arbitrary string to use for aggregation, max length of 100 characters. If you specify a key, all events using that key will be grouped together in the Event Stream.\n\n*source_type_name [optional, default=None]\nThe type of event being posted.\n\n*Options: nagios, hudson, jenkins, user, my apps, feed, chef, puppet, git, bitbucket, fabric, capistrano"
					},
					"response": []
				},
				{
					"name": "Get an Event",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/events/:EVENT_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"events",
								":EVENT_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "EVENT_ID",
									"value": ""
								}
							]
						},
						"description": "Get event details by event_id"
					},
					"response": []
				},
				{
					"name": "DELETE An Event",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Something big happened!\",\n\"text\":\"And let me tell you all about it here!\",\n\"tags\":\"environment:prod\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/events/:EVENT_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"events",
								":EVENT_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "EVENT_ID",
									"value": ""
								}
							]
						},
						"description": "DELETE event details by event_id"
					},
					"response": []
				},
				{
					"name": "Query the event stream",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b2fd1ea-4374-492b-bb28-f94a3bac8053",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = -30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/events?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start={{from_ts}}&end={{to_ts}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"events"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start",
									"value": "{{from_ts}}"
								},
								{
									"key": "end",
									"value": "{{to_ts}}"
								}
							]
						},
						"description": "The event stream can be queried and filtered by time, priority, sources and tags.\n\nARGUMENTS\n\n*start [required]\nPOSIX timestamp\n\n*end [required]\nPOSIX timestamp\n\n*priority [optional, default=None]\n'low' or 'normal'\n\n*sources [optional, default=None]\nA comma separated string of sources\n\n*tags [optional, default=None]\nA comma separated string of tags"
					},
					"response": []
				}
			],
			"description": "The events service allows you to programatically post events to the stream and fetch events from the stream."
		},
		{
			"name": "Graphs",
			"item": [
				{
					"name": "Graph a Snapshot",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "845f4a29-943c-4069-9c7b-29a8a0312b85",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = -30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/snapshot?api_key={{dd_api_key}}&application_key={{dd_app_key}}&metric_query=system.load.1{*}&start={{from_ts}}&end={{to_ts}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"snapshot"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "metric_query",
									"value": "system.load.1{*}"
								},
								{
									"key": "start",
									"value": "{{from_ts}}"
								},
								{
									"key": "end",
									"value": "{{to_ts}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*metric_query [required]\nThe metric query.\n\n*start [required]\nThe POSIX timestamp of the start of the query.\n\n*end [required]\nThe POSIX timestamp of the end of the query.\n\n*event_query [optional, default=None]\nA query that will add event bands to the graph.\n\n*graph_def [optional, default=None]\nA JSON document defining the graph. graph_def can be used instead of metric_query. The JSON document uses the grammar defined here and should be formatted to a single line then URLEncoded. The graph_def argument is only available in the REST API and not using the Ruby or Python wrappers.\n\n*title [optional, default=None]\nA title for the graph. If no title is specified, the graph will not have a title."
					},
					"response": []
				}
			],
			"description": "You can take graph snapshots using the API."
		},
		{
			"name": "Hosts",
			"item": [
				{
					"name": "Search hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/hosts?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"hosts"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "tags",
									"value": "10.31.10.6",
									"disabled": true
								}
							]
						},
						"description": "This endpoint allows searching for hosts by name, alias, or tag. Hosts live within the past 3 hours are included. Results are paginated with a max of 100 results at a time.\n\nARGUMENTS\nfilter [optional, default=None]: Query string to filter search results.\nsort_field [optional, default=cpu]: Sort hosts by the given field. Options: status, apps, cpu, iowait, load\nsort_dir [optional, default=desc]: Direction of sort. Options: asc, desc\nstart [optional, default=0]: Host result to start search from.\ncount [optional, default=100]: Number of host results to return. Max 100."
					},
					"response": []
				},
				{
					"name": "Host totals",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/hosts/totals?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"hosts",
								"totals"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "tags",
									"value": "10.31.10.6",
									"disabled": true
								}
							]
						},
						"description": "This endpoint returns the total number of active and up hosts in your Datadog account. Active means the host has reported in the past hour, and up means it has reported in the past two hours.\n\nARGUMENTS\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Mute a Host",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5aa35b4d-447e-4099-a0ee-37451d29d751",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = 30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"end\": \"{{to_ts}}\",\n    \"message\": \"Muting this host for a test!\",\n    \"override\": \"False\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/host/:HOSTNAME/mute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"host",
								":HOSTNAME",
								"mute"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "myhost"
								}
							]
						},
						"description": "ARGUMENTS\n\n*end [optional, default=None]\nPOSIX timestamp when the host will be unmuted. If omitted, the host will remain muted until explicitly unmuted.\n\n*message [optional, default=None]\nMessage to associate with the muting of this host\n\n*override [optional, default=False]\nIf true and the host is already muted, will replace existing host mute settings."
					},
					"response": []
				},
				{
					"name": "Unmute a Host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"message\": \"Un-Muting this host for a test!\"\n  }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/host/:HOSTNAME/unmute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"host",
								":HOSTNAME",
								"unmute"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "myhost"
								}
							]
						},
						"description": "ARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				}
			]
		},
		{
			"name": "Integrations",
			"item": [
				{
					"name": "AWS",
					"item": [
						{
							"name": "List AWS Accounts",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/aws?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						},
						{
							"name": "Create an AWS Account in Datadog",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"account_id\": \"YOUR_AWS_ACCOUNT_ID\",\n        \"filter_tags\": [\"env:staging\"],\n        \"host_tags\": [\"account:staging\",\"account:customer1\"],\n        \"role_name\": \"DatadogAWSIntegrationRole\",\n        \"account_specific_namespace_rules\": {\n        \t\"auto_scaling\": false,\n        \t\"opsworks\": false\n        }\n    }\n"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/aws?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						},
						{
							"name": "DELETE AWS Integration Details",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"account_id\": \"YOUR_AWS_ACCOUNT_ID\",\n        \"role_name\": \"DatadogAWSIntegrationRole\"\n    }\n"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/aws?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						},
						{
							"name": "List available namespace rules",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"available_namespace_rules"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List AWS Filtering rules",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"YOUR_AWS_ACCOUNT_ID\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/aws/filtering?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "List AWS Accounts (role-based only) in Datadog"
							},
							"response": []
						},
						{
							"name": "Configure AWS Filtering rule Copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"YOUR_AWS_ACCOUNT_ID\",\n    \"namespace\": \"sqs\",\n    \"tag_filter_str\": \"include_tags,!exclude_tags\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/aws/filtering?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "List AWS Accounts (role-based only) in Datadog"
							},
							"response": []
						},
						{
							"name": "Delete AWS Filtering rule Copy",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"YOUR_AWS_ACCOUNT_ID\",\n    \"namespace\": \"sqs\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/aws/filtering?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "List AWS Accounts (role-based only) in Datadog"
							},
							"response": []
						}
					],
					"description": "Configure your Datadog-AWS integration directly through Datadog API.\n\nMore Details Here: https://docs.datadoghq.com/integrations/amazon_web_services/",
					"_postman_isSubFolder": true
				},
				{
					"name": "Azure",
					"item": [
						{
							"name": "List Azure Account",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/aws?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an Azure Account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"tenant_name\": \"<AZURE_TENANT_NAME>\",\n        \"client_id\": \"<AZURE_CLIENT_ID>\",\n        \"client_secret\": \"<AZURE_CLIENT_SECRET>\",\n        \"host_filters\": \"<KEY_1>:<VALUE_1>,<KEY_2>:<VALUE_2>\"\n    }"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/azure?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Azure Account's Host Filters",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"tenant_name\": \"<AZURE_TENANT_NAME>\",\n        \"client_id\": \"<AZURE_CLIENT_ID>\",\n        \"host_filters\": \"<KEY_1>:<VALUE_1>,<KEY_2>:<VALUE_2>\"\n    }"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/azure?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an Azure Account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"tenant_name\": \"<AZURE_TENANT_NAME>\",\n        \"client_id\": \"<AZURE_CLIENT_ID>\"\n    }"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/azure?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "ARGUMENTS\nRefer to the Datadog-Azure integration installation instructions to see how to obtain the following field values for your organization.\n\ntenant_name [required]:\n\nYour Azure Active Directory ID.\n\nclient_id [required]:\n\nYour Azure web application ID.\n\nclient_secret [required]:\n\nYour Azure web application secret key.\n\nhost_filters [optional, default=None]:\n\nLimit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0aa7e2a3-8d06-4a0c-b8bb-6fb788526e43",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ad9a861e-a18a-412a-98b3-e1497cf9236b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Google Cloud Platform",
					"item": [
						{
							"name": "List GCP Accounts",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/gcp?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "All of the following fields’ values are provided by the JSON service account key file created in the GCP Console for service accounts; Refer to the Datadog-Google Cloud Platform integration installation instructions to see how to generate one for your organization. For further references, consult the Google Cloud service account documentation.\n\ntype [required]:\n\nShould be service_account, it can be found in your JSON service account key.\n\nproject_id [required]:\n\nYour Google Cloud project ID found in your JSON service account key.\n\nprivate_key_id [required]:\n\nYour private key ID found in your JSON service account key.\n\nprivate_key [required]:\n\nYour private key name found in your JSON service account key.\n\nclient_email [required]:\n\nYour email found in your JSON service account key.\n\nclient_id [required]:\n\nYour ID found in your JSON service account key.\n\nauth_uri [required]:\n\nShould be https://accounts.google.com/o/oauth2/auth.\n\ntoken_uri [required]:\n\nShould be https://accounts.google.com/o/oauth2/token.\n\nauth_provider_x509_cert_url [required]:\n\nShould be https://www.googleapis.com/oauth2/v1/certs.\n\nclient_x509_cert_url [required]:\n\nShould be https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL> where <CLIENT_EMAIL> is the email found in your JSON service account key.\n\nhost_filters [optional]:\n\nLimit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n\nautomute [optional, default=false]:\n\nSilence monitors for expected GCE instance shutdowns."
							},
							"response": []
						},
						{
							"name": "Create GCP Account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"type\": \"service_account\",\n        \"project_id\": \"<GCP_PROJECT_ID>\",\n        \"private_key_id\": \"<PRIVATE_KEY_ID>\",\n        \"private_key\": \"<PRIVATE_KEY>\",\n        \"client_email\": \"<CLIENT_EMAIL>\",\n        \"client_id\": \"<CLIENT_ID>\",\n        \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n        \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n        \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n        \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n        \"host_filters\": \"<KEY_1>:<VALUE_1>,<KEY_2>:<VALUE_2>\"\n    }"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/gcp?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a GCP Service Account's automute option",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"project_id\": \"<GCP_PROJECT_ID>\",\n        \"client_email\": \"<CLIENT_EMAIL>\",\n        \"automute\": <AUTOMUTE> # true or false\n    }"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/gcp?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a GCP Service Account's host filters",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"project_id\": \"<GCP_PROJECT_ID>\",\n        \"client_email\": \"<CLIENT_EMAIL>\",\n        \"host_filters\": \"<KEY_1>:<VALUE_1>,<KEY_2>:<VALUE_2>\"\n    }"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/gcp?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a GCP Service Account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"project_id\": \"<GCP_PROJECT_ID>\",\n        \"client_email\": \"<CLIENT_EMAIL>\"\n    }"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/gcp?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PagerDuty",
					"item": [
						{
							"name": "Get PagerDuty Configuration",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/pagerduty?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete PagerDuty Configuration",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/pagerduty?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create / Replace PagerDuty Coniguration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n       \"services\": [\n        {\n          \"service_name\": \"test_00\",\n          \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        },\n        {\n          \"service_name\": \"test_01\",\n          \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        }\n      ],\n      \"subdomain\": \"my-pd\",\n      \"schedules\": [\"https://my-pd.pagerduty.com/schedules#PCPYT4M\", \"https://my-pd.pagerduty.com/schedules#PKTPB7P\"],\n      \"api_token\": \"<PAGERDUTY_TOKEN>\"\n    }\n"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/pagerduty?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Configure your Datadog-PagerDuty integration directly through Datadog API."
							},
							"response": []
						},
						{
							"name": "Update: Add New Services and Schedules",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n      \"services\": [\n        {\n          \"service_name\": \"test_00\",\n          \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        },\n        {\n          \"service_name\": \"test_01\",\n          \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        }\n      ],\n      \"schedules\": [\"<SCHEDULE_1>\", \"<SCHEDULE_2>\"],\n  }"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/pagerduty?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "Configure your Datadog-PagerDuty integration directly through Datadog API.\nRead more about Datadog-PagerDuty integration\n\nARGUMENTS\nservices [required]:\nArray of PagerDuty service objects. Learn how to configure you Datadog service with PagerDuty documentation. A PagerDuty service object is composed by:\n\nservice_name [required]:\nYour Service name in PagerDuty.\n\nservice_key [required]:\nYour Service name associated service key in Pagerduty.\n\nsubdomain [required]:\nYour PagerDuty accounts personalized sub-domain name.\n\nschedules [required]: Array of your schedule URLs e.g:\n[\"https://my-pd.pagerduty.com/schedules#PCPYT4M\", \"https://my-pd.pagerduty.com/schedules#PKTPB7P\"]\n\napi_token [required]:\nYour PagerDuty API token.\n\nrun_check [optional, default=false]:\nDetermines if the integration install check is run before returning a response.\n\nIf true:\n\nThe install check is run\nIf there’s an error in the configuration the error is returned\nIf there’s no error, 204 No Content response code is returned\nIf false:\n\nWe return a 202 accepted\nInstall check is run after returning a response",
					"_postman_isSubFolder": true
				},
				{
					"name": "Slack",
					"item": [
						{
							"name": "Get Slack Configuration Details",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"service_hooks\": [\n      {\n        \"account\": \"Main_Account\",\n        \"url\": \"https://hooks.slack.com/services/1/1\"\n      },\n      {\n        \"account\": \"doghouse\",\n        \"url\": \"https://hooks.slack.com/services/2/2\"\n      }\n    ],\n    \"channels\": [\n      {\n        \"channel_name\": \"#private\",\n        \"transfer_all_user_comments\": \"false\",\n        \"account\": \"Main_Account\"\n      },\n      {\n        \"channel_name\": \"#heresachannel\",\n        \"transfer_all_user_comments\": \"false\",\n        \"account\": \"doghouse\"\n      }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/slack?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Slack Configuration Details",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"service_hooks\": [\n      {\n        \"account\": \"Main_Account\",\n        \"url\": \"https://hooks.slack.com/services/1/1\"\n      },\n      {\n        \"account\": \"doghouse\",\n        \"url\": \"https://hooks.slack.com/services/2/2\"\n      }\n    ],\n    \"channels\": [\n      {\n        \"channel_name\": \"#private\",\n        \"transfer_all_user_comments\": \"false\",\n        \"account\": \"Main_Account\"\n      },\n      {\n        \"channel_name\": \"#heresachannel\",\n        \"transfer_all_user_comments\": \"false\",\n        \"account\": \"doghouse\"\n      }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/slack?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Slack Configuration ",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"service_hooks\": [\n      {\n        \"account\": \"Main_Account\",\n        \"url\": \"https://hooks.slack.com/services/1/1\"\n      },\n      {\n        \"account\": \"doghouse\",\n        \"url\": \"https://hooks.slack.com/services/2/2\"\n      }\n    ],\n    \"channels\": [\n      {\n        \"channel_name\": \"#private\",\n        \"transfer_all_user_comments\": \"false\",\n        \"account\": \"Main_Account\"\n      },\n      {\n        \"channel_name\": \"#heresachannel\",\n        \"transfer_all_user_comments\": \"false\",\n        \"account\": \"doghouse\"\n      }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/slack?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Configure your Datadog-Slack integration directly through Datadog API."
							},
							"response": []
						},
						{
							"name": "Update and Add Channels To Existing Configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channels\": [\n      {\n        \"channel_name\": \"<CHANNEL_NAME_3>\",\n        \"transfer_all_user_comments\": \"false\",\n        \"account\": \"<SLACK_ACCOUNT_1>\"\n      },\n      {\n        \"channel_name\": \"<CHANNEL_NAME_4>\",\n        \"transfer_all_user_comments\": \"false\",\n        \"account\": \"<SLACK_ACCOUNT_2>\"\n      }\n    ]\n  }"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/slack?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "Configure your Datadog-Slack integration directly through Datadog API.\nRead more about Datadog-Slack integration\n\nARGUMENTS\nservice_hooks [required]:\nArray of service hook objects (the service hook is generated for your slack account in your Slack account administration page). A service hook object is composed by:\n\naccount [required]:\nYour Slack account name.\n\nurl [required]:\nYour Slack Service Hook URL.\n\nchannels [required]:\nArray of slack channel objects to post to. A slack channel object is composed by:\n\nchannel_name [required]:\nYour channel name e.g: #general, #private\n\ntransfer_all_user_comments [optional, default=False]:\nTo be notified for every comment on a graph, set it to true. If set to False use the @slack-channel_name syntax for comments to be posted to slack.\n\naccount [required]:\nAccount to which the channel belongs to.\n\nrun_check [optional, default=false]:\nDetermines if the integration install check is run before returning a response.\n\nIf true:\n\nThe install check is run\nIf there’s an error in the configuration the error is returned\nIf there’s no error, 204 No Content response code is returned\nIf false:\n\nWe return a 202 accepted\nInstall check is run after returning a response",
					"_postman_isSubFolder": true
				},
				{
					"name": "Webhooks",
					"item": [
						{
							"name": "Get all Webhook Configurations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n      {\n        \"name\": \"somehook\",\n        \"url\": \"http://requestb.in/v1srg7v1\",\n        \"use_custom_payload\": \"false\",\n        \"custom_payload\": \"\",\n        \"encode_as_form\": \"false\",\n        \"headers\": \"\"\n    \t}\n]}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/webhooks?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Webhook Configurations",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n      {\n        \"name\": \"somehook\",\n        \"url\": \"http://requestb.in/v1srg7v1\",\n        \"use_custom_payload\": \"false\",\n        \"custom_payload\": \"\",\n        \"encode_as_form\": \"false\",\n        \"headers\": \"\"\n    \t}\n]}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/webhooks?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add to Current Configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n      {\n        \"name\": \"somehook\",\n        \"url\": \"http://requestb.in/v1srg7v1\",\n        \"use_custom_payload\": \"false\",\n        \"custom_payload\": \"\",\n        \"encode_as_form\": \"false\",\n        \"headers\": \"\"\n    \t}\n]}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/webhooks?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						},
						{
							"name": "Replace Current Configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n      {\n        \"name\": \"anotherone\",\n        \"url\": \"http://requestb.in/v1srg7v1\"\n      }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/webhooks?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						}
					],
					"description": "Webhooks\nConfigure your Datadog-Webhooks integration directly through Datadog API.\nRead more about Datadog-Webhooks integration\n\nARGUMENTS\nhooks [required]:\nArray of Webhook objects. A Webhook object is composed by:\n\nname [required]:\nYour Webhook name.\nLearn more on how to use it in monitor notifications.\nurl [required]:\nYour Webhook URL.\nuse_custom_payload [optional, default=False]:\nIf true, allow you to specify a custom payload for your Webhook.\n\ncustom_payload [optional, default=None]:\nIf use_custom_payloag is true, specify your own payload to add your own custom fields to the request using those variables.\n\nencode_as_form [optional, default=False]:\nIf use_custom_payload is true, set this to true to have your payload to be URL-encoded.\n\nheaders [optional, default=None]:\nHeaders attached to your Webhook.\n\nrun_check [optional, default=false]:\nDetermines if the integration install check is run before returning a response.\n\nIf true:\n\nThe install check is run\nIf there’s an error in the configuration the error is returned\nIf there’s no error, 204 No Content response code is returned\nIf false:\n\nWe return a 202 accepted\nInstall check is run after returning a response",
					"_postman_isSubFolder": true
				}
			],
			"description": "Configure your Datadog integrations via Datadog API, current configurable integrations are:\n\nAWS\nPagerDuty\nSlack\nWebhooks\nAvailable Endpoints are:\n\nTo Create an integration in Datadog:\nPOST /api/v1/integration/<source_type_name>\n\nTo edit an integration configuration:\nPUT /api/v1/integration/<source_type_name>\n\nTo get an integration status:\nGET /api/v1/integration/<source_type_name>\n\nTo delete an integration from Datadog:\nDELETE /api/v1/integration/<source_type_name>",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cee8587f-57a4-4835-8a94-9db6cc75c767",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "81e73228-13c1-444f-8424-202bff06c2ec",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Key Management",
			"item": [
				{
					"name": "API Key",
					"item": [
						{
							"name": "Get all API Key",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/api_key?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"api_key"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Get all API key from a given Datadog Organization"
							},
							"response": []
						},
						{
							"name": "Create a new API Key",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"<API_KEY_NAME>\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/api_key?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"api_key"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Create a new API key for your Datadog Account by providing its name."
							},
							"response": []
						},
						{
							"name": "Get a given API Key",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/api_key/:API_KEY?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"api_key",
										":API_KEY"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									],
									"variable": [
										{
											"key": "API_KEY",
											"value": "<API_KEY_TO_GET>"
										}
									]
								},
								"description": "Get a given API Key description from Datadog"
							},
							"response": []
						},
						{
							"name": "Edit a given API key",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"<API_KEY_NAME>\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/api_key/:API_KEY?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"api_key",
										":API_KEY"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									],
									"variable": [
										{
											"key": "API_KEY",
											"value": "<API_KEY_TO_EDIT>"
										}
									]
								},
								"description": "Edit the name of a given API key."
							},
							"response": []
						},
						{
							"name": "Delete an API key",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/api_key/:API_KEY?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"api_key",
										":API_KEY"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									],
									"variable": [
										{
											"key": "API_KEY",
											"value": "<API_KEY_TO_DELETE>"
										}
									]
								},
								"description": "Delete a given API key"
							},
							"response": []
						}
					],
					"description": "Manage your Datadog API keys",
					"_postman_isSubFolder": true
				},
				{
					"name": "Application Key",
					"item": [
						{
							"name": "Get all Application Key",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/application_key?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"application_key"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Get all API key from a given Datadog Organization"
							},
							"response": []
						},
						{
							"name": "Create a new Application Key",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"<APP_KEY_NAME>\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/application_key?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"application_key"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Create a new API key for your Datadog Account by providing its name."
							},
							"response": []
						},
						{
							"name": "Get a given Application Key",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/application_key/:APP_KEY?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"application_key",
										":APP_KEY"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									],
									"variable": [
										{
											"key": "APP_KEY",
											"value": "<APP_KEY_TO_GET>"
										}
									]
								},
								"description": "Get a given API Key description from Datadog"
							},
							"response": []
						},
						{
							"name": "Edit a given Application key",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"<APP_KEY_NAME>\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/application_key/:APP_KEY?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"application_key",
										":APP_KEY"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									],
									"variable": [
										{
											"key": "APP_KEY",
											"value": "<APP_KEY_TO_EDIT>"
										}
									]
								},
								"description": "Edit the name of a given API key."
							},
							"response": []
						},
						{
							"name": "Delete an Application key",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/application_key/:APP_KEY?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"application_key",
										":APP_KEY"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									],
									"variable": [
										{
											"key": "APP_KEY",
											"value": "<APP_KEY_TO_DELETE>"
										}
									]
								},
								"description": "Delete a given API key"
							},
							"response": []
						}
					],
					"description": "Manage your Datadog API keys",
					"_postman_isSubFolder": true
				}
			],
			"description": "Manage your Datdog API keys"
		},
		{
			"name": "Logs",
			"item": [
				{
					"name": "Send Logs Over HTTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \n   \"message\":\"This is an example log message over HTTP!\",\n   \"http\":{  \n      \"status_code\":301,\n      \"method\":\"POST\",\n      \"request_id\":\"{{$randomInt}}\"\n   },\n   \"network\":{  \n      \"client\":{  \n         \"ip\":\"127.0.0.1\",\n         \"port\":\"80\"\n      },\n      \"destination\":{  \n         \"ip\":\"10.0.0.1\"\n      }\n   },\n   \"duration\":2000,\n   \"category\":\"test\"\n}"
						},
						"url": {
							"raw": "https://http-intake.logs.datadoghq.com/v1/input/{{dd_api_key}}?ddsource=nginx&service=exampleService&hostname=exampleHost",
							"protocol": "https",
							"host": [
								"http-intake",
								"logs",
								"datadoghq",
								"com"
							],
							"path": [
								"v1",
								"input",
								"{{dd_api_key}}"
							],
							"query": [
								{
									"key": "ddsource",
									"value": "nginx"
								},
								{
									"key": "service",
									"value": "exampleService"
								},
								{
									"key": "hostname",
									"value": "exampleHost"
								}
							]
						},
						"description": "Protocols\thttp: 80 or https: 443\n\nQuery parameters\t \nddsource=<SOURCE>\nservice=<SERVICE>\nhostname=<HOSTNAME>\n"
					},
					"response": []
				},
				{
					"name": "Get a list of logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0508c94e-6c5b-4440-9f9f-312195e3f325",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = -30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"limit\": 50,\n    \"query\": \"source:agent status:error\",\n    \"sort\": \"desc\",\n    \"time\": {\n        \"from\": \"{{from_date}}\",\n        \"to\": \"{{to_date}}\"\n    }\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/logs-queries/list?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"logs-queries",
								"list"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "List endpoint returns logs that match a log search query. Results are paginated.\n\nARGUMENTS\nquery [required]:\nThe search query - following the Log search syntax .\ntime.from [required]:\nMinimum timestamp for requested logs. Format can be either\nan ISO-8601 string\na unix timestamp (number representing the elapsed millisec since epoch)\ntime.to [required]:\nMaximum timestamp for requested logs. Format can be either\nan ISO-8601 string with minute, second or millisecond precision\na unix timestamp (number representing the elapsed millisec since epoch)\ntime.timezone [optional, default=None]: Can be specified both as an offset (e.g. “UTC+03:00”) or a regional zone (e.g. “Europe/Paris”)\ntime.offset [optional, default=None]: Equivalent to time.timezone. But value in seconds. If both timezone and offset are specified, timezone is ignored.\nstartAt [optional, default=None]:\nHash identifier of the first log to return in the list, available in a log id attribute. This parameter is used for the pagination feature. Note: this parameter is ignored if the corresponding log is out of the scope of the specified time window.\nsort [optional, default=desc]:\nTime-ascending asc or time-descending descresults.\nlimit [optional, default=10]:\nNumber of logs return in the response (maximum is 1000)\nindex [optional, default=main]:\nFor multi-index organizations, the log index in which the request is performed.\nPAGINATION\nRetrieve a log list longer than the 1000 logs limit with the Log List API Pagination feature:\n\nfor the first request, use no startAt parameter.\nfor the N-th request, use nextLogID of N-1th request result as the startAt parameter value.\nFor better control over pagination results, you should use an absolute time parameter - don’t use thenow keyword."
					},
					"response": []
				}
			],
			"description": "Send your logs to your Datadog platform over HTTP.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f3c90f9f-2f7b-4b10-9ff0-1e95bd405883",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "53b8551e-05d1-4b29-a168-9f304aa33165",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Metrics",
			"item": [
				{
					"name": "Get All Active Metrics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "757736b1-36c3-47a0-b919-3041e624db1f",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = -30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/metrics?api_key={{dd_api_key}}&application_key={{dd_app_key}}&from={{from_ts}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"metrics"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "from",
									"value": "{{from_ts}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n* from [required]\nseconds since the unix epoch"
					},
					"response": []
				},
				{
					"name": "POST Time Series Point",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5edede57-369e-4c98-b74c-267e1aa0f014",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"series\" :\n         [{\"metric\":\"test.metric\",\n          \"points\":[[\"{{$timestamp}}\", \"{{$randomInt}}\"]],\n          \"type\":\"gauge\",\n          \"tags\":\"source:Postman,test\",\n          \"host\":\"macbookPro\"\n         }\n        ]\n    }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/series?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"series"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "The metrics end-point allows you to post time-series data that can be graphed on Datadog's dashboards.\n\nARGUMENTS\n\n*series [required]\nA JSON array of metrics where each item in the array contains the following arguments:\n\n*metric [required]\nThe name of the time series\n\n*points [required]\nA JSON array of points. Each point is of the form:\n[[POSIX_timestamp, numeric_value], ...]\nNote that the timestamp should be in seconds, must be current, and the numeric value is a 32bit float gauge-type value. Current is defined as not more than 10 minutes in the future or more than 1 hour in the past.\n\n*host [optional, default=None]\nThe name of the host that produced the metric.\n\n*tags [optional, default=None]\nA list of tags associated with the metric."
					},
					"response": []
				},
				{
					"name": "Query Time Series Points",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "059ebd69-505a-475f-ae87-ec5a88bf18a2",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = -30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/query?api_key={{dd_api_key}}&application_key={{dd_app_key}}&from={{from_ts}}&to={{to_ts}}&query=system.cpu.idle{*}by{host}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"query"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "from",
									"value": "{{from_ts}}"
								},
								{
									"key": "to",
									"value": "{{to_ts}}"
								},
								{
									"key": "query",
									"value": "system.cpu.idle{*}by{host}"
								}
							]
						},
						"description": "This end point allows you to query for metrics from any time period.\n\nARGUMENTS\n\n*from [required]\nseconds since the unix epoch\n\n*to [required]\nseconds since the unix epoch\n\n*query [required]\nThe query string\n\n\nQUERY LANGUAGE\n\nAny query used for a graph can be used here. See here for more details. The time between from and to should be less than 24 hours. If it is longer, you will receive points with less granularity."
					},
					"response": []
				},
				{
					"name": "View Metric Metadata",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/metrics/:METRIC_NAME?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								":METRIC_NAME"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "METRIC_NAME",
									"value": "system.cpu.system"
								}
							]
						},
						"description": "ARGUMENTS\n\nThis endpoint takes no JSON arguments"
					},
					"response": []
				},
				{
					"name": "Edit Metric Metadata",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"The percent of time the CPU spent running the kernel 2.\",\n    \"short_name\": \"cpu system\",\n    \"integration\": \"system\",\n    \"statsd_interval\": null,\n    \"per_unit\": null,\n    \"type\": \"gauge\",\n    \"unit\": \"percent\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/metrics/:METRIC_NAME?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								":METRIC_NAME"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "METRIC_NAME",
									"value": "system.cpu.system"
								}
							]
						},
						"description": "ARGUMENTS\n\nThe metrics metadata endpoint allows you to edit fields of a metric's metadata.\n\nARGUMENTS\n\n*type [optional, default=None]\nmetric type such as 'gauge' or 'rate'\n\n*description [optional, default=None]\nstring description of the metric\n\n*short_name [optional, default=None]\nshort name string of the metric\n\n*unit [optional, default=None]\nprimary unit of the metric such as 'byte' or 'operation'\n\n*per_unit [optional, default=None]\n'per' unit of the metric such as 'second' in 'bytes per second'\n\n*statsd_interval [optional, default=None]\nif applicable, statds flush interval in seconds for the metric"
					},
					"response": []
				},
				{
					"name": "Search Metrics",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/search?q=metrics:system.cpu.system&api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "metrics:system.cpu.system"
								},
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "The metrics end-point allows you to:\n\n*Post metrics data so it can be graphed on Datadog's dashboards\n\n*Query metrics from any time period\n\nAs occurs within the Datadog UI, a graph can only contain a set number of points and as the timeframe over which a metric is viewed increases, aggregation between points will occur to stay below that set number.\n\nThus, if you are querying for larger timeframes of data, the points returned will be more aggregated. The max granularity within Datadog is one point per second, so if you had submitted points at that interval and requested a very small interval from the query API (in this case, probably less than 100 seconds), you could end up getting all of those points back. Otherwise, our algorithm tries to return about 150 points per any given time window, so you'll see coarser and coarser granularity as the amount of time requested increases. We do this time aggregation via averages."
		},
		{
			"name": "Monitors",
			"item": [
				{
					"name": "Create a Monitor ",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"type\": \"metric alert\",\n      \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n      \"name\": \"Bytes received on host0\",\n      \"message\": \"We may need to add web hosts if this is consistently high.\",\n      \"tags\": [\"app:webserver\", \"frontend\"],\n      \"options\": {\n      \t\"notify_no_data\": true,\n      \t\"no_data_timeframe\": 20\n      }\n    }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "http://docs.datadoghq.com/api/?lang=console#monitors"
					},
					"response": []
				},
				{
					"name": "Get a Monitor's Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/:MONITOR_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":MONITOR_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "MONITOR_ID",
									"value": ""
								}
							]
						},
						"description": "ARGUMENTS\n\n*group_states [optional, default=None]\n\nIf this argument is set, the returned data will include additional information (if available) regarding the specified group states, including the last notification timestamp, last resolution timestamp and details about the last time the monitor was triggered. The argument should include a string list indicating what, if any, group states to include. Choose one or more from 'all', 'alert', 'warn', or 'no data'. Example: 'alert,warn'"
					},
					"response": []
				},
				{
					"name": "Edit a Monitor's Details",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"tags\": [],\n        \"deleted\": null,\n        \"query\": \"\\\"windows_service.state\\\".over(\\\"host:GamingPC\\\",\\\"service:termservice\\\").by(\\\"host\\\",\\\"service\\\").last(4).count_by_status()\",\n        \"message\": \"Example Windows Service Check for {{service.name}} on {{host.name}}\",\n        \"matching_downtimes\": [],\n        \"id\": 4769031,\n        \"multi\": true,\n        \"name\": \"Windows Service Check\",\n        \"created\": \"2018-04-25T16:06:10.564735+00:00\",\n        \"created_at\": 1524672370000,\n        \"creator\": {\n            \"id\": 580920,\n            \"handle\": \"test@example.com\",\n            \"name\": \"Joe Schmoe\",\n            \"email\": \"test@example.com\"\n        },\n        \"org_id\": 12345,\n        \"modified\": \"2018-04-25T16:06:10.564735+00:00\",\n        \"overall_state_modified\": null,\n        \"overall_state\": \"No Data\",\n        \"type\": \"service check\",\n        \"options\": {\n            \"notify_audit\": false,\n            \"locked\": false,\n            \"timeout_h\": 0,\n            \"silenced\": {},\n            \"thresholds\": {\n                \"warning\": 3,\n                \"ok\": 3,\n                \"critical\": 3\n            },\n            \"new_host_delay\": 300,\n            \"notify_no_data\": false,\n            \"renotify_interval\": 0,\n            \"no_data_timeframe\": 2\n        }\n    }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/:MONITOR_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":MONITOR_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "MONITOR_ID",
									"value": ""
								}
							]
						},
						"description": "ARGUMENTS\n\n*query [required]\nThe metric query to alert on.\n\n*name [optional, default=dynamic, based on query]\nThe name of the monitor.\n\n*message [optional, default=dynamic, based on query]\nA message to include with notifications for this monitor. Email notifications can be sent to specific users by using the same '@username' notation as events.\n\n*options [optional, default=None]\nRefer to the create monitor documentation for details on the available options.\n\n*tags [optional, default=empty list]\nA list of tags to associate with your monitor. This can help you categorize and filter monitors."
					},
					"response": []
				},
				{
					"name": "DELETE a Monitor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/:MONITOR_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":MONITOR_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "MONITOR_ID",
									"value": ""
								}
							]
						},
						"description": "ARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "GET All Monitor Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*group_states [optional, default=None]\nIf this argument is set, the returned data will include additional information (if available) regarding the specified group states, including the last notification timestamp, last resolution timestamp and details about the last time the monitor was triggered. The argument should include a string list indicating what, if any, group states to include. Choose one or more from 'all', 'alert', 'warn', or 'no data'. Example: 'alert,warn'\n\n*name [optional, default=None]\nA string to filter monitors by name\n\n*tags [optional, default=None]\nA comma separated list indicating what tags, if any, should be used to filter the list of monitors by scope, e.g. host:host0. For more information, see the tags parameter for the appropriate query argument in the Create a monitor section above.\n\n*monitor_tags [optional, default=None]\nA comma separated list indicating what service and/or custom tags, if any, should be used to filter the list of monitors. Tags created in the Datadog UI will automatically have the \"service\" key prepended (e.g. service:my-app)"
					},
					"response": []
				},
				{
					"name": "Resolve Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"resolve\": [\n        {\n            \"2376503\": \"*\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/monitor/bulk_resolve?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"monitor",
								"bulk_resolve"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Here you can resolve a monitor by monitorId & Group (can wildcard).\n\nresolve [required]: Array of group(s) to resolve for a given monitor_id, e.g.: {\"monitor_id\": \"group_to_resolve\"}\n\nIt supports multiple groups per monitor, e.g.: resolve: [{\"monitor_id\": \"group_1\"}, {\"monitor_id\": \"group_2\"}]\n\nIt can also resolve all triggered groups with the pseudo-group ALL_GROUPS: resolve: [{\"monitor_id\": \"ALL_GROUPS\"}]"
					},
					"response": []
				},
				{
					"name": "Mute All Monitors",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/mute_all?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"mute_all"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Muting will prevent all monitors from notifying through email and posts to the event stream. State changes will only be visible by checking the alert page.\n\nARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Unmute All Monitors",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/unmute_all?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"unmute_all"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Disables muting all monitors. Throws an error if mute all was not enabled previously.\n\nARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Mute A Specific Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"type\": \"metric alert\",\n      \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n      \"name\": \"Bytes received on host0\",\n      \"message\": \"We may need to add web hosts if this is consistently high.\",\n      \"tags\": [\"app:webserver\", \"frontend\"],\n      \"options\": {\n      \t\"notify_no_data\": true,\n      \t\"no_data_timeframe\": 20\n      }\n    }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/1959920/mute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"1959920",
								"mute"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*scope [optional, default=None]\nThe scope to apply the mute to, e.g. role:db\n\n*end [optional, default=None]\nA POSIX timestamp for when the mute should end"
					},
					"response": []
				},
				{
					"name": "Unmute A Specific Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"type\": \"metric alert\",\n      \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n      \"name\": \"Bytes received on host0\",\n      \"message\": \"We may need to add web hosts if this is consistently high.\",\n      \"tags\": [\"app:webserver\", \"frontend\"],\n      \"options\": {\n      \t\"notify_no_data\": true,\n      \t\"no_data_timeframe\": 20\n      }\n    }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/:MONITOR_ID/unmute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":MONITOR_ID",
								"unmute"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "MONITOR_ID",
									"value": ""
								}
							]
						},
						"description": "ARGUMENTS\n\n*scope [optional, default=None]\nThe scope to apply the mute to. For example, if your alert is grouped by {host}, you might mute 'host:app1'\n\n*all_scopes [optional, default=False]\nClear muting across all scopes"
					},
					"response": []
				},
				{
					"name": "Validate a Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"query alert\",\n    \"query\": \"min(last_5m):avg:fse_auto_process.request.duration{build:prod} + avg:cassandra.db.recent_read_latency_micros{host:fse-ldmx-f7-18} + avg:cassandra.db.recent_write_latency_micros{host:fse-ldmx-f7-18} + avg:redis.info.latency_ms{*} + avg:gunicorn.request.duration.avg{*} >= 550\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/monitor?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\ntype [required]:\nThe type of the monitor, chosen from:\nMONITOR TYPE\tTYPE ATTRIBUTE VALUE\nanomaly\tquery alert\napm\tquery alert\ncomposite\tcomposite\ncustom\tservice check\nevent\tevent alert\nforecast\tquery alert\nhost\tservice check\nintegration\tquery alert\nlive process\tprocess alert\nlogs\tlog alert\nmetric\tquery alert\nnetwork\tservice check\noutlier\tquery alert\nprocess\tservice check\nquery [required]:\nThe query defines when the monitor triggers. Query syntax depends on monitor type. See Create a monitor for details."
					},
					"response": []
				},
				{
					"name": "Monitor Search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/monitor/search?api_key={{dd_api_key}}&application_key={{dd_app_key}}&query=CPU High",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"search"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "query",
									"value": "CPU High",
									"description": "[optional], After entering a search query in your Manage Monitor page use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated manage monitor documentation page to learn more."
								},
								{
									"key": "page",
									"value": "insert pagination number here",
									"description": "[optional, default = 0], Page to start paginating from.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "insert value here",
									"description": "[optional, default=30],  Number of monitors to return per page.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "insert value here",
									"description": "[optional, default=null], Comma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags",
									"disabled": true
								}
							]
						},
						"description": "Search and filter your monitors details.\n\nARGUMENTS\nquery [optional]:\n\nAfter entering a search query in your Manage Monitor page use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated manage monitor documentation page to learn more.\n\npage [optional, default = 0]:\n\nPage to start paginating from.\n\nper_page [optional, default=30]:\n\nNumber of monitors to return per page.\n\nsort [optional, default=null]:\n\nComma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags"
					},
					"response": []
				},
				{
					"name": "Monitor Group Search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/monitor/groups/search?api_key={{dd_api_key}}&application_key={{dd_app_key}}&query=ELB",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"groups",
								"search"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "query",
									"value": "ELB",
									"description": "[optional], After entering a search query in your Manage Monitor page use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated manage monitor documentation page to learn more."
								},
								{
									"key": "page",
									"value": "insert pagination number here",
									"description": "[optional, default = 0], Page to start paginating from.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "insert value here",
									"description": "[optional, default=30],  Number of monitors to return per page.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "insert value here",
									"description": "[optional, default=null], Comma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags",
									"disabled": true
								}
							]
						},
						"description": "Search and filter your monitor groups details.\n\nARGUMENTS\nquery [optional]:\n\nAfter entering a search query in your Manage Monitor page use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated manage monitor documentation page to learn more.\n\npage [optional, default = 0]:\n\nPage to start paginating from.\n\nper_page [optional, default=30]:\n\nNumber of monitors to return per page.\n\nsort [optional, default=null]:\n\nComma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags"
					},
					"response": []
				}
			],
			"description": "Monitors allow you to watch a metric or check that you care about, notifying your team when some defined threshold is exceeded. Please refer to the Guide to Monitors for more information on creating monitors."
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Create child-organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"Setup Child Org Via API\",\n    \"subscription\" : {\n        \"type\" : \"pro\"\n    },\n    \"billing\" : {\n        \"type\" : \"parent_billing\"\n    }\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/org?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"org"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "create child org, based off api_key and app_key"
					},
					"response": []
				},
				{
					"name": "Get Organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/org?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"org"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "public_id",
									"value": "ox0uxa88vwyklfbz",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Organization",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"settings\": {\n            \"saml\": {\n                \"enabled\": false\n            },\n            \"saml_strict_mode\": {\n                \"enabled\": false\n            },\n            \"saml_idp_initiated_login\": {\n                \"enabled\": false\n            },\n            \"saml_autocreate_users_domains\": {\n                \"enabled\": false,\n                \"domains\": [\n                    \"my-org.com\",\n                    \"example.com\"\n                ]\n            }\n        }\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/org/:PUBLIC_ID",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"org",
								":PUBLIC_ID"
							],
							"variable": [
								{
									"key": "PUBLIC_ID",
									"value": ""
								}
							]
						},
						"description": "ARGUMENTS\nname [optional]:\nThe organization name.\nsettings [optional]:\nA JSON array of settings. Settings include:\nsaml - Set the boolean property enabled to enable or disable single sign on with SAML. See the SAML documentation for more information about all SAML settings.\nsaml_idp_initiated_login - has one property enabled (boolean).v\nsaml_strict_mode - has one property enabled (boolean).\nsaml_autocreate_users_domains - has two properties: enabled (boolean) and domains which is a list of domains without the @ symbol."
					},
					"response": []
				},
				{
					"name": "Upload iDP metadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"settings\": {\n            \"saml\": {\n                \"enabled\": true\n            },\n            \"saml_strict_mode\": {\n                \"enabled\": true\n            },\n            \"saml_idp_initiated_login\": {\n                \"enabled\": true\n            },\n            \"saml_autocreate_users_domains\": {\n                \"enabled\": true,\n                \"domains\": [\n                    \"my-org.com\",\n                    \"example.com\"\n                ]\n            }\n        }"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/org/:PUBLIC_ID/idp_metadata",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"org",
								":PUBLIC_ID",
								"idp_metadata"
							],
							"variable": [
								{
									"key": "PUBLIC_ID",
									"value": ""
								}
							]
						},
						"description": "ARGUMENTS\nidp_file [required]:\nThe path to the XML metadata file you wish to upload."
					},
					"response": []
				}
			],
			"description": "This endpoint requires the multi-org account feature and must be enabled by contacting support.\n\nMulti-org feature:https://docs.datadoghq.com/account_management/multi_organization\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4bfcbf69-1cf1-43f5-bcb1-7eb0e3d3b95f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8192426f-c281-4ad7-88a5-012c97209c9c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Get Tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/tags/hosts?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Return a mapping of tags to hosts for your whole infrastructure.\n\nARGUMENTS\nsource [optional, default=None]:\nOnly show tags from a particular source. Otherwise shows all tags.\nComplete list of source attribute values"
					},
					"response": []
				},
				{
					"name": "Get host tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/tags/hosts/:HOSTNAME?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":HOSTNAME"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "myhost"
								}
							]
						},
						"description": "Get all host tags by hostname"
					},
					"response": []
				},
				{
					"name": "Add tags to a host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"tags\" : [\"environment:production\", \"role:webserver\"]\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/tags/hosts/:HOSTNAME?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":HOSTNAME"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "myhost"
								}
							]
						},
						"description": "This end point allows you to add new tags to a host, optionally specifying where these tags come from.\n\nARGUMENTS\n\ntags [required]:\nA list of tags to apply to the host\n\nsource [optional, default=users]:\nThe source of the tags (e.g. chef, puppet).\n"
					},
					"response": []
				},
				{
					"name": "Update host tags",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"tags\" : [\"environment:production\", \"role:webserver\"]\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/tags/hosts/:HOSTNAME?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":HOSTNAME"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "myhost"
								}
							]
						},
						"description": "This end point allows you to update/replace all tags in an integration source with those supplied in the request.\n\nARGUMENTS\ntags [required]:\nA list of tags\nsource [optional, default=users]:\nThe source of the tags (e.g. chef, puppet).\nComplete list of source attribute values"
					},
					"response": []
				},
				{
					"name": "Remove host tags",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/tags/hosts/:HOSTNAME?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":HOSTNAME"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "myhost"
								}
							]
						},
						"description": "This end point allows you to remove all tags in an integration source for a single host.\n\nARGUMENTS\nsource [optional, default=users]:\nThe source of the tags (e.g. chef, puppet)."
					},
					"response": []
				}
			],
			"description": "The tag end point allows you to tag hosts with keywords meaningful to you - like role:database. All metrics sent from a host will have its tags applied. When fetching and applying tags to a particular host, you can refer to hosts by name (yourhost.example.com).\n\nThe component of your infrastructure responsible for a tag is identified by a source. Valid sources are: nagios, hudson, jenkins, users, feed, chef, puppet, git, bitbucket, fabric, capistrano."
		},
		{
			"name": "Tracing",
			"item": [
				{
					"name": "Send traces",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4498d5f5-38b7-41d5-ab34-6c83ed1246f0",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = -30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"// timestamp in ns",
									"var from_ts_ns = parseInt(from_ts_ms*1000);",
									"var to_ts_ns = parseInt(to_ts_ms*1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    [\n        {\n            \"trace_id\": \"{{guid}}\",\n            \"span_id\": \"{{guid}}\",\n            \"name\": \"span_name\",\n            \"resource\": \"/home\",\n            \"service\": \"service_name\",\n            \"type\": \"web\",\n            \"start\": \"{{from_ts_ns}}\",\n            \"duration\": \"2000000000\"\n        }\n    ]\n]"
						},
						"url": {
							"raw": "http://localhost:8126/v0.3/traces",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8126",
							"path": [
								"v0.3",
								"traces"
							]
						},
						"description": "Datadog’s APM allows you to collect performance metrics by tracing your code to determine which parts of your application are slow or inefficient.\n\nTracing data is sent to the Datadog Agent via an HTTP API. We provide some official libraries that simplify sending metrics to the Datadog Agent, however you may want to interact directly with the API to instrument applications that cannot use the libraries or are written in languages that don’t yet have an official Datadog Tracing library.\n\nTraces can be sent as an array of traces:\n\n[ trace1, trace2, trace3 ]\nand each trace is an array of spans:\n\ntrace1 = [ span, span2, span3 ]\nand each span is a dictionary with a trace_id, span_id, resource..\n\n"
					},
					"response": []
				},
				{
					"name": "Send services",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_name\": {\n        \"app\": \"my-app\",\n        \"app_type\": \"web\"\n    }\n}"
						},
						"url": {
							"raw": "http://localhost:8126/v0.3/services",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8126",
							"path": [
								"v0.3",
								"services"
							]
						},
						"description": "https://docs.datadoghq.com/api/?lang=bash#send-traces"
					},
					"response": []
				}
			]
		},
		{
			"name": "Usage Metering",
			"item": [
				{
					"name": "GET Hourly Usage For Hosts and Containers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "86c2f87a-0c50-4e0e-82cc-a27b79513156",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/hosts?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start_hr=2019-04-01T00&end_hr=2019-04-03T00",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"hosts"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start_hr",
									"value": "2019-04-01T00",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "2019-04-03T00",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour"
								}
							]
						},
						"description": "Get Hourly Usage For Hosts and Containers.\n\nArguments\nstart_hr [required]:\ndatetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour\nend_hr [optional, default=1d+start_hr]:\ndatetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n\n\nResponse\ncontainer_count:\nShows the total number of containers reporting via the Docker integration during the hour.\nhost_count:\nContains the total number of billable infrastructure hosts reporting during a given hour. This is the sum of agent_host_count, aws_host_count, and gcp_host_count.\nhour:\nThe hour for the usage.\napm_host_count:\nShows the total number of hosts using APM during the hour. For Pro plans, these are counted as billable (except during trial periods). For Enterprise plans, APM hosts are included in the price of infrastructure hosts (see host_count) and not billed separately.\nagent_host_count:\nContains the total number of infrastructure hosts reporting during a given hour that were running the Datadog Agent.\ngcp_host_count:\nContains the total number of hosts that reported via the Google Cloud integration (and were NOT running the Datadog Agent).\naws_host_count:\nContains the total number of hosts that reported via the AWS integration (and were NOT running the Datadog Agent). When AWS or GCP hosts are also running the Datadog Agent, they are counted as Agent hosts, NOT as AWS or GCP"
					},
					"response": []
				},
				{
					"name": "Get hourly usage for logs",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/logs?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start_hr=2019-04-01T00&end_hr=2019-04-03T00",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"logs"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start_hr",
									"value": "2019-04-01T00",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "2019-04-03T00",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour"
								}
							]
						},
						"description": "Get Hourly Usage For Logs.\n\nArguments\n\nstart_hr [required]: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour\n\nend_hr [optional, default=1d+start_hr]: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n\n\nResponse\n\ningested_events_bytes: Contains the number of log bytes ingested.\n\nindexed_events_count: Contains the number of log events indexed.\n\nhour: The hour for the usage."
					},
					"response": []
				},
				{
					"name": "GET Hourly Usage for Custom Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/timeseries?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start_hr=2019-04-01T00&end_hr=2019-04-03T00",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"timeseries"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start_hr",
									"value": "2019-04-01T00",
									"description": "Required: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "2019-04-03T00",
									"description": "Optional: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour"
								}
							]
						},
						"description": "Get Top Custom Metrics By Hourly Average.\n\nArguments\nmonth [required]:\ndatetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour.\n\nnames [optional, default=None]:\nComma-separated list of metric names."
					},
					"response": []
				},
				{
					"name": "GET Top 500 Custom Metrics by hourly average",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/top_avg_metrics?api_key={{dd_api_key}}&application_key={{dd_app_key}}&month=2019-04&names=aws.ec2.spot_history,system.processes.number",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"top_avg_metrics"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "month",
									"value": "2019-04",
									"description": "Required: datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour."
								},
								{
									"key": "names",
									"value": "aws.ec2.spot_history,system.processes.number",
									"description": "optional: comma-separated list of metric names "
								}
							]
						},
						"description": "Get Top Custom Metrics By Hourly Average.\n\nArguments\nmonth [required]:\ndatetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour.\nnames [optional, default=None]:\nComma-separated list of metric names."
					},
					"response": []
				},
				{
					"name": "GET Multi-Org Usage Details",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/summary?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start_month=2019-04",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"summary"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start_month",
									"value": "2019-04",
									"description": "[required]:\nDatetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning in this month. Maximum of 15 months ago."
								},
								{
									"key": "end_month",
									"value": "2019-04",
									"description": "[optional, default=current_month-3d]: Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage ending this month.",
									"disabled": true
								},
								{
									"key": "include_org_ids",
									"value": "76293afda",
									"description": "[optional, default=true]: Include usage summaries for each sub-org.",
									"disabled": true
								}
							]
						},
						"description": "Get usage across your multi-org account\n\nArguments\nstart_month [required]:\nDatetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning in this month. Maximum of 15 months ago.\nend_month [optional, default=current_month-3d]: Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage ending this month.\ninclude_org_details [optional, default=true]: Include usage summaries for each sub-org."
					},
					"response": []
				},
				{
					"name": "Get hourly usage for Trace Search",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/traces?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start_hr=2019-04-04T02",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"traces"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start_hr",
									"value": "2019-04-04T02",
									"description": "Required: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "",
									"description": "[optional, default=1d+start_hr]: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour",
									"disabled": true
								}
							]
						},
						"description": "Get hourly usage For Trace Search.\n\nArguments\n\nstart_hr [required]: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour\n\nend_hr [optional, default=1d+start_hr]: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n\n\nResponse\n\nindexed_events_count: Contains the number of Trace Search events indexed.\n\nhour: The hour for the usage."
					},
					"response": []
				}
			],
			"description": "This API is currently in private beta. Python and Ruby clients are not yet supported.\n\nThe usage metering end-point allows you to:\n\nGet Hourly Usage For Hosts and Containers\nGet Hourly Usage For Custom Metrics\nGet Top Custom Metrics By Hourly Average\nUsage data is delayed by up to 72 hours from when it was incurred. It is retained for the past 15 months."
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Create user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"disabled\": false,\n    \"handle\": \"test@gmail.com\",\n    \"name\": \"Testy McTestingson\",\n    \"is_admin\": true,\n    \"role\": null,\n    \"access_role\": \"adm\",\n    \"verified\": true,\n    \"email\": \"test@gmail.com\",\n    \"icon\": \"https://secure.gravatar.com/avatar/df46ee85ff1cbb518b20c8cab742b9ea?s=48&d=retro\"\n  }\n"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\nhandle [required]:\nThe user handle, must be a valid email.\nname [optional, default=None]:\nThe name of the user.\naccess_role [optional, default=st]:\nThe access role of the user. Choose from:\nst (standard user),\nadm (admin user),\nro (read-only user).\nNote: users can be created with admin access role only with application keys belonging to administrators."
					},
					"response": []
				},
				{
					"name": "Get user",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user/:USER_HANDLE?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user",
								":USER_HANDLE"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "USER_HANDLE",
									"value": "test@datadoghq.com",
									"description": "Usually the same as the email address"
								}
							]
						},
						"description": "id [required]:\nThe handle of the user."
					},
					"response": []
				},
				{
					"name": "Get all users",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "This end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Update user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"disabled\": false,\n    \"handle\": \"email@domain.com\",\n    \"name\": \"Testy McTestingson\",\n    \"is_admin\": true,\n    \"role\": null,\n    \"access_role\": \"adm\",\n    \"verified\": true,\n    \"email\": \"email@domain.com\",\n    \"icon\": \"https://secure.gravatar.com/avatar/df46ee85ff1cbb518b20c8cab742b9ea?s=48&d=retro\"\n  }\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user/:USER_HANDLE?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user",
								":USER_HANDLE"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "USER_HANDLE",
									"value": "test@datadoghq.com"
								}
							]
						},
						"description": "ARGUMENTS\n\nid [required]:\nThe handle of the user.\nname [optional, default=None]:\nThe new name of the user.\nemail [optional, default=None]:\nThe new email of the user.\ndisabled [optional, default=None]:\nThe new disabled status of the user.\naccess_role [optional, default=st]:\nThe access role of the user. Choose from:\nst (standard user),\nadm (admin user),\nro (read-only user)."
					},
					"response": []
				},
				{
					"name": "Disable user",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user/:USER_HANDLE?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user",
								":USER_HANDLE"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "USER_HANDLE",
									"value": "test@datadoghq.com"
								}
							]
						},
						"description": "ARGUMENTS\nid [required]:\nThe handle of the user."
					},
					"response": []
				}
			],
			"description": "You can create, edit, and disable users."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c41623be-f6de-4e50-b2d7-a774bd352140",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "72537730-7e9d-49b3-96a1-49995ee97eba",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "ae54c8e4-523f-43ae-9f0f-3cb148ffea5a",
			"key": "dd_api_key",
			"value": "xxxxx",
			"type": "string"
		},
		{
			"id": "a3db5baf-b743-4ff9-947b-37f23edce215",
			"key": "dd_app_key",
			"value": "yyyyy",
			"type": "string"
		}
	]
}
{
	"info": {
		"_postman_id": "097e99f5-7af9-4e1b-85be-ae445b2d2dfe",
		"name": "Datadog API Collection",
		"description": "Top Level Folder For Datadog API calls",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Authentication Check",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/validate?api_key={{dd_api_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"validate"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								}
							]
						},
						"description": "All requests to Datadog's API must be authenticated. Requests that write data require *reporting access* and require an `API key`. Requests that read data require *full access* and also require an `application key`.\n\n[Manage your account's API and application keys](https://app.datadoghq.com/account/settings#api).\n\nThis GET call just checks to see if an API call key is valid."
					},
					"response": [
						{
							"name": "Authentication Check Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/validate?api_key={{dd_api_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"validate"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 07:29:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "14"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=; Max-Age=0; Path=/; expires=Sun, 14-Apr-2019 07:29:49 GMT"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1245690"
								},
								{
									"key": "X-DD-Debug",
									"value": "v/iGUuQ8dr8LTSC393ZDUCTpqtv8nSZ+kA85N+73L6NpoOgjcUF3OOQuvGc3I10Q"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"valid\": true\n}"
						}
					]
				}
			],
			"description": "All requests to Datadog's API must be authenticated. Requests that write data require reporting access and require an API key. Requests that read data require full access and also require an application key."
		},
		{
			"name": "Checks",
			"item": [
				{
					"name": "Post a Check Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"check\": \"<CHECK_NAME>\",\n    \"host_name\": \"<HOSTNAME>\",\n    \"status\": 0,\n    \"timestamp\": {{$timestamp}},\n    \"message\": \"<MESSAGE>\",\n    \"tags\":\"<TAG_KEY>:<TAG_VALUE>\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/check_run?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"check_run"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nThis POST call allows for you to POST check statuses for use with monitors\n\n### Arguments\n\n* **`check`** *[required]*: The text for the message\n\n* **`host_name`** *[required]*: The name of the host submitting the check\n\n* **`status`** *[optional]*: An integer for the status of the check:\n    * 0 : OK\n    * 1 : WARNING\n    * 2 : CRITICAL\n    * 3 : UNKNOWN\n  \n\n* **`timestamp`** *[optional]*: POSIX timestamp of the event.\n\n* **`message`** *[optional]*:   A description of why this status occurred  \n\n* **`tags`** *[optional]*:  A list of key:val tags for this check"
					},
					"response": [
						{
							"name": "POST Check Status Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n      \"check\": \"app.is_ok\",\n      \"host_name\": \"app1\",\n      \"timestamp\": {{$timestamp}},\n      \"status\": 0,\n      \"tags\": [\"env:test\"]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/check_run?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"check_run"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"status\": \"ok\"\n}"
						}
					]
				}
			],
			"description": "The service check endpoint allows you to post check statuses for use with [monitors](https://docs.datadoghq.com/monitors).\n\nService check messages are limited to 500 characters. If a check is posted with a message containing more than 500 characters, only the 500 first characters are displayed.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bd2bd199-bd42-493e-ae4b-346d2942a969",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7fefd94a-c3c0-4d42-890d-e4caec89141d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Create a Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"<MESSAGE>\",\n    \"handle\": \"<DATADOG_HANDLE>\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/comments?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"comments"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nThis POST call allows for you to POST status messages, or reply to another thread (if related_event_id is passed)\n\nComments are essentially special forms of events that appear in the [event stream](https://docs.datadoghq.com/graphing/event_stream). They can start a new discussion thread or optionally, reply in another thread.\n\n### Arguments\n\n* **`message`** [*required*]: The comment text.\n\n* **`handle`** [*optional*, *default* = **application key owner**]: The handle of the user making the comment."
					},
					"response": [
						{
							"name": "Create a Comment Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"There is a problem with the database.\",\n    \"handle\": \"test@datadoghq.com\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/comments?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"comments"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"comment\": {\n        \"handle\": \"test@datadoghq.com\",\n        \"id\": 1382561676571697516,\n        \"message\": \"There is a problem with the database.\",\n        \"resource\": \"/api/v1/comments/1382561676571697516\",\n        \"url\": \"/event/jump_to?event_id=1382561676571697516\"\n    }\n}"
						},
						{
							"name": "400 - Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"<MESSAGE>\",\n    \"handle\": \"<DATADOG_HANDLE>\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/comments?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"comments"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:38:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "68"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"The value provided for parameter 'handle' is invalid\"\n    ]\n}"
						},
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"<MESSAGE>\",\n    \"handle\": \"pierre.guceski@datadoghq.com\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/comments?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"comments"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:39:04 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:39:03 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "6KMTMsFn0azCfQwSreWVM1dRjcjppIO02LqzrMPjk0hnBLuKtWs0FjCxblFGeg3A"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"comment\": {\n        \"url\": \"/event/event?id=4889126983613267970\",\n        \"resource\": \"/api/v1/comments/4889126983613267970\",\n        \"message\": \"<MESSAGE>\",\n        \"handle\": \"test@datadoghq.com\",\n        \"id\": 4889126983613267970\n    }\n}"
						}
					]
				},
				{
					"name": "Edit a Comment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"<NEW_COMMENT_MESSAGE>\",\n    \"handle\":\"<DATADOG_HANDLE>\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/comments/:COMMENT_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"comments",
								":COMMENT_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "COMMENT_ID",
									"value": "{{comment_id}}",
									"description": "ID of the comment to edit."
								}
							]
						},
						"description": "### Overview\n\nThis POST call allows for you to change a previously posted comment by commentId\n\n### Arguments\n\n* **`message`** [*optional*, *default* = **original message**]: The comment text.\n\n* **`handle`** [*optional*, *default* = **Application key owner**]: The handle of the user making the comment."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"<NEW_COMMENT_MESSAGE>\",\n    \"handle\":\"pierre.guceski@datadoghq.com\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/comments/:COMMENT_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":COMMENT_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "COMMENT_ID",
											"value": "4889126983613267970",
											"description": "ID of the comment to edit."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:39:44 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:39:44 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "Z2FDofQAgH+UEZrkb7jgfWlhlCGLkFwQKWBizuErqTzFBKILPVl+pYSm/yB/pNdW"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"comment\": {\n        \"url\": \"/event/event?id=4889126983613267970\",\n        \"resource\": \"/api/v1/comments/4889126983613267970\",\n        \"message\": \"<NEW_COMMENT_MESSAGE>\",\n        \"handle\": \"test@datadoghq.com\",\n        \"id\": 4889126983613267970\n    }\n}"
						},
						{
							"name": "Edit a Comment Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"My new comment message.\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/comments/:EVENT_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":EVENT_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									],
									"variable": [
										{
											"key": "EVENT_ID",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"comment\": {\n        \"handle\": \"mattp+org-carlotest141@datadoghq.com\",\n        \"id\": 1382557387240472966,\n        \"message\": \"My new comment message.\",\n        \"resource\": \"/api/v1/comments/1382557387240472966\",\n        \"url\": \"/event/jump_to?event_id=1382557387240472966\"\n    }\n}"
						}
					]
				},
				{
					"name": "Reply To Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"<MESSAGE_REPLIED_TO_COMMENT>\",\n    \"handle\": \"<HANDLE>\",\n    \"related_event_id\": \"<INSERT_EVENT_ID>\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/comments?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"comments"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "### Overview\n\nThis POST call allows for you to POST status messages to a previous post via ID.\n\n### Arguments\n\n* **`message`** [*required*]: The comment text.\n\n* **`handle`** [*optional*, *default* = **application key owner**]: The handle of the user making the comment.\n\n* **`related_event_id`** [*optional*, *default* = **None**]: The id of another comment or event to reply to."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"<MESSAGE_REPLIED_TO_COMMENT>\",\n    \"handle\": \"pierre.guceski@datadoghq.com\",\n    \"related_event_id\": \"4889126983613267970\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/comments?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"comments"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:40:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:40:49 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "BFo5pkWZh/C2gN1EpK9/eHxq0sk6KtRHVoaKSOqTVZX9Uyn5F6EVjJv4RooV6bWP"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"comment\": {\n        \"resource\": \"/api/v1/comments/4889128764784349185\",\n        \"url\": \"/event/event?id=4889128764784349185\",\n        \"handle\": \"test_1@datadoghq.com\",\n        \"message\": \"<MESSAGE_REPLIED_TO_COMMENT>\",\n        \"related_event_id\": \"4889126983613267970\",\n        \"id\": 4889128764784349185\n    }\n}"
						}
					]
				},
				{
					"name": "Delete a Comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/comments/:COMMENT_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"comments",
								":COMMENT_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "COMMENT_ID",
									"value": "{{comment_id}}",
									"description": "ID of the comment to edit."
								}
							]
						},
						"description": "### Overview\n\nThiscall allows for you to DELETE a previously posted comment by with a given <COMMENT_ID>.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				}
			],
			"description": "Comments are how discussion happens on Datadog. Create, edit, delete and reply to comments.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fa610237-8bee-4f93-beb5-368287a0d7b0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b16ec315-5627-4590-b686-8c4c0cd2e64e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Dashboards",
			"item": [
				{
					"name": "Create a Dashboard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"<DASHBOARD_TITLE>\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"timeseries\",\n                \"requests\": [\n                    {\n                        \"q\": \"avg:system.mem.free{*}\"\n                    }\n                ],\n                \"title\": \"Average Memory Free\"\n            }\n        }\n    ],\n    \"layout_type\": \"ordered\",\n    \"description\": \"<DASHBOARD_DESCRIPTION>\",\n    \"is_read_only\": true,\n    \"notify_list\": [\n        \"test@datadoghq.com\"\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"prefix\": \"host\",\n            \"default\": \"myhost\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nCreate a Dashboard in Datadog.\n\n### Arguments\n\n* **`title`** [*required*]: Title of the dashboard.\n* **`widgets`** [*required*]: List of widgets to display on the dashboard. Widget definitions follow this form:\n    * **`definition`** [*required*]: [Definition of the widget.](https://docs.datadoghq.com//graphing/widgets)\n    * **`id`** [*optional*, *default*=**auto-generated integer**]: ID of the widget.\n* **`layout_type`** [*required*]: Layout type of the dashboard. Available values are: `ordered` (previous timeboard) or `free` (previous screenboard layout)\n* **`description`** [*optional*, *default*=**None**]: Description of the dashboard.\n* **`is_read_only`** [*optional*, *default*=**False**]: Whether this dashboard is read-only. If `True`, only the author and admins can make changes to it.\n* **`notify_list`** [*optional*, *default*=**None**]: List of handles of users to notify when changes are made to this dashboard.\n* **`template_variables`** [*optional*, *default*=**None**]: List of template variables for this dashboard. Template variable definitions follow this form:\n    * **`name`** [*required*]: The name of the variable.\n    * **`default`** [*optional*, *default*=**None**]: The default value for the template variable on dashboard load.\n    * **`prefix`** [*optional*, *default*=**None**]: The tag prefix associated with the variable. Only tags with this prefix appear in the variable dropdown."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"<DASHBOARD_TITLE>\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"timeseries\",\n                \"requests\": [\n                    {\n                        \"q\": \"avg:system.mem.free{*}\"\n                    }\n                ],\n                \"title\": \"Average Memory Free\"\n            }\n        }\n    ],\n    \"layout_type\": \"ordered\",\n    \"description\": \"<DASHBOARD_DESCRIPTION>\",\n    \"is_read_only\": true,\n    \"notify_list\": [\n        \"test@datadoghq.com\"\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"prefix\": \"host\",\n            \"default\": \"myhost\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:35:20 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:35:20 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "ZpWsACBQpgzv2VsU5CX0YAFtJeXHfdBGLwHJddPqzsfv7Pqmq24zCPBMypS9HlbJ"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"notify_list\": [],\n    \"description\": \"<DASHBOARD_DESCRIPTION>\",\n    \"template_variables\": [\n        {\n            \"default\": \"myhost\",\n            \"prefix\": \"host\",\n            \"name\": \"host1\"\n        }\n    ],\n    \"is_read_only\": true,\n    \"id\": \"civ-zbj-ag5\",\n    \"title\": \"<DASHBOARD_TITLE>\",\n    \"url\": \"/dashboard/civ-zbj-ag5/dashboardtitle\",\n    \"created_at\": \"2019-04-19T12:35:20.490074+00:00\",\n    \"modified_at\": \"2019-04-19T12:35:20.490074+00:00\",\n    \"author_handle\": \"test@datadoghq.com\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"requests\": [\n                    {\n                        \"q\": \"avg:system.mem.free{*}\"\n                    }\n                ],\n                \"type\": \"timeseries\",\n                \"title\": \"Average Memory Free\"\n            },\n            \"id\": 8618605446924544\n        }\n    ],\n    \"layout_type\": \"ordered\"\n}"
						}
					]
				},
				{
					"name": "Update a Dashboard",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"<NEW_DASHBOARD_TITLE>\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"timeseries\",\n                \"requests\": [\n                    {\n                        \"q\": \"sum:system.mem.free{*}\"\n                    }\n                ],\n                \"title\": \"Sum Memory Free Shell\"\n            }\n        }\n    ],\n    \"layout_type\": \"ordered\",\n    \"description\": \"An updated dashboard with memory info.\",\n    \"is_read_only\": true,\n    \"notify_list\": [\n        \"test@datadoghq.com\"\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"prefix\": \"host\",\n            \"default\": \"myhost\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/:DASHBOARD_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":DASHBOARD_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"description": "ID of the Dashboard to update",
									"key": "DASHBOARD_ID",
									"value": "{{dashboard_id}}"
								}
							]
						},
						"description": "### Overview\n\nUpdate a Dashboard in Datadog.\n\n### Arguments\n\n* **`title`** [*required*]: Title of the dashboard.\n* **`widgets`** [*required*]: List of widgets to display on the dashboard. Widget definitions follow this form:\n    * **`definition`** [*required*]: [Definition of the widget.](https://docs.datadoghq.com/graphing/widgets)\n    * **`id`** [*optional*, *default*=**auto-generated integer**]: ID of the widget.\n* **`layout_type`** [*required*]: Layout type of the dashboard. Available values are: `ordered` (previous timeboard) or `free` (previous screenboard layout)\n* **`description`** [*optional*, *default*=**None**]: Description of the dashboard.\n* **`is_read_only`** [*optional*, *default*=**False**]: Whether this dashboard is read-only. If `True`, only the author and admins can make changes to it.\n* **`notify_list`** [*optional*, *default*=**None**]: List of handles of users to notify when changes are made to this dashboard.\n* **`template_variables`** [*optional*, *default*=**None**]: List of template variables for this dashboard. Template variable definitions follow this form:\n    * **`name`** [*required*]: The name of the variable.\n    * **`default`** [*optional*, *default*=**None**]: The default value for the template variable on dashboard load.\n    * **`prefix`** [*optional*, *default*=**None**]: The tag prefix associated with the variable. Only tags with this prefix appear in the variable dropdown."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"<NEW_DASHBOARD_TITLE>\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"timeseries\",\n                \"requests\": [\n                    {\n                        \"q\": \"sum:system.mem.free{*}\"\n                    }\n                ],\n                \"title\": \"Sum Memory Free Shell\"\n            }\n        }\n    ],\n    \"layout_type\": \"ordered\",\n    \"description\": \"An updated dashboard with memory info.\",\n    \"is_read_only\": true,\n    \"notify_list\": [\n        \"test@datadoghq.com\"\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"prefix\": \"host\",\n            \"default\": \"myhost\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/:DASHBOARD_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":DASHBOARD_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"description": "ID of the Dashboard to update",
											"key": "DASHBOARD_ID",
											"value": "civ-zbj-ag5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:36:11 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:36:11 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "tflGvAO5gLHgDp2fJjYE1J9I1BNQ2w0Leh9Ruv6ub4r9E92SJ060w0w7jeRI6TKs"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"notify_list\": [],\n    \"description\": \"An updated dashboard with memory info.\",\n    \"template_variables\": [\n        {\n            \"default\": \"myhost\",\n            \"prefix\": \"host\",\n            \"name\": \"host1\"\n        }\n    ],\n    \"is_read_only\": true,\n    \"id\": \"civ-zbj-ag5\",\n    \"title\": \"<NEW_DASHBOARD_TITLE>\",\n    \"url\": \"/dashboard/civ-zbj-ag5/newdashboardtitle\",\n    \"created_at\": \"2019-04-19T12:35:20.490074+00:00\",\n    \"modified_at\": \"2019-04-19T12:36:11.667609+00:00\",\n    \"author_handle\": \"test@datadoghq.com\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"requests\": [\n                    {\n                        \"q\": \"sum:system.mem.free{*}\"\n                    }\n                ],\n                \"type\": \"timeseries\",\n                \"title\": \"Sum Memory Free Shell\"\n            },\n            \"id\": 8077021146151090\n        }\n    ],\n    \"layout_type\": \"ordered\"\n}"
						}
					]
				},
				{
					"name": "Delete a Dashboard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/:DASHBOARD_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":DASHBOARD_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"description": "Id of the Dashboar to delete",
									"key": "DASHBOARD_ID",
									"value": "{{dashboard_id}}"
								}
							]
						},
						"description": "### Overview\n\nDelete an existing dashboard. \n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/:DASHBOARD_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":DASHBOARD_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"description": "Id of the Dashboar to delete",
											"key": "DASHBOARD_ID",
											"value": "civ-zbj-ag5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:38:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:38:16 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "Zf9XnfJyYt1Iso+cP3mXkyI2PedzOMMfCOMqGogyCERwXtSbE5Zf+v4+ZVGIiiZ2"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"deleted_dashboard_id\": \"civ-zbj-ag5\"\n}"
						}
					]
				},
				{
					"name": "Get a Dashboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/dashboard/:DASHBOARD_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":DASHBOARD_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"description": "Id of the Dashboard to GET",
									"key": "DASHBOARD_ID",
									"value": "{{dashboard_id}}"
								}
							]
						},
						"description": "### Overview\n\nFetch an existing dashboard's definition.\n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/dashboard/:DASHBOARD_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":DASHBOARD_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"description": "Id of the Dashboard to GET",
											"key": "DASHBOARD_ID",
											"value": "civ-zbj-ag5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:36:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:36:50 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "Zf9XnfJyYt1Iso+cP3mXkyI2PedzOMMfCOMqGogyCERwXtSbE5Zf+v4+ZVGIiiZ2"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"notify_list\": [],\n    \"description\": \"An updated dashboard with memory info.\",\n    \"template_variables\": [\n        {\n            \"default\": \"myhost\",\n            \"prefix\": \"host\",\n            \"name\": \"host1\"\n        }\n    ],\n    \"is_read_only\": true,\n    \"id\": \"civ-zbj-ag5\",\n    \"title\": \"<NEW_DASHBOARD_TITLE>\",\n    \"url\": \"/dashboard/civ-zbj-ag5/newdashboardtitle\",\n    \"created_at\": \"2019-04-19T12:35:20.490074+00:00\",\n    \"modified_at\": \"2019-04-19T12:36:11.667609+00:00\",\n    \"author_handle\": \"test@datadoghq.com\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"requests\": [\n                    {\n                        \"q\": \"sum:system.mem.free{*}\"\n                    }\n                ],\n                \"type\": \"timeseries\",\n                \"title\": \"Sum Memory Free Shell\"\n            },\n            \"id\": 8077021146151090\n        }\n    ],\n    \"layout_type\": \"ordered\"\n}"
						}
					]
				},
				{
					"name": "Get all Dashboards",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/dashboard/?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								""
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nFetch all existing Dashboards.\n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": []
				}
			],
			"description": "This new endpoint unifies screenboard and timeboard APIs to allow you to manage all of your dashboards using a single format. Documentation for old endpoints is available here:\n\n* [Timeboard API doc](https://docs.datadoghq.com/graphing/faq/timeboard-api-doc)\n* [Screenboard API doc](https://docs.datadoghq.com/graphing/faq/screenboard-api-doc)\n\nThis endpoint allows you to programmatically create, update, delete, and query dashboards.\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9bba2d30-9292-4bd8-b9d3-2e3caf91e9c1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "59940d9e-c793-4d5f-b624-4e6c3f597270",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Dashboard Lists",
			"item": [
				{
					"name": "Get a Dashboard List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "{{dashboard_list_id}}",
									"description": "Dashboard list ID to fetch"
								}
							]
						},
						"description": "### Overview\n\nFetch an existing dashboard list’s definition.\n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":DASHBOARD_LIST_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DASHBOARD_LIST_ID",
											"value": "57440",
											"description": "Dashboard list ID to fetch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:31:00 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:31:00 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "kwlHFpTCzfAmxw0po2RPh++ODIcO75ahisnXZstlTc88E5RFn0MHT6logmhrACsZ"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"is_favorite\": false,\n    \"name\": \"<DASHBOARD_LIST_TITLE>\",\n    \"dashboard_count\": 0,\n    \"author\": {\n        \"handle\": \"test@datadoghq.com\",\n        \"name\": \"John Doe\"\n    },\n    \"created\": \"2019-04-19T12:29:38.231231+00:00\",\n    \"type\": \"manual_dashboard_list\",\n    \"dashboards\": null,\n    \"modified\": \"2019-04-19T12:29:38.231245+00:00\",\n    \"id\": 57440\n}"
						}
					]
				},
				{
					"name": "Get all Dashboard Lists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nFetch all of your existing dashboard list definitions.\n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:31:31 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:31:31 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "lnwFdO4PxYNHOW5gvIDVvh3I0KQyoun8vPF2cw3IdhDOBdG7dYm+DbeEFIp6zp6v"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"dashboard_lists\": [\n        {\n            \"is_favorite\": false,\n            \"name\": \"<DASHBOARD_LIST_TITLE>\",\n            \"dashboard_count\": 0,\n            \"author\": {\n                \"handle\": \"test@datadoghq.com\",\n                \"name\": \"John Doe\"\n            },\n            \"created\": \"2019-04-19T12:29:38.231231+00:00\",\n            \"type\": \"manual_dashboard_list\",\n            \"dashboards\": null,\n            \"modified\": \"2019-04-19T12:29:38.231245+00:00\",\n            \"id\": 57440\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Create a Dashboard List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<DASHBOARD_LIST_TITLE>\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nCreate an empty dashboard list.\n\n### Arguments\n\n*   **`name`** [*required*]: The name of the dashboard list."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<DASHBOARD_LIST_TITLE>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:29:38 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:29:38 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "jQ+XRxSbHVKlY4T2FvKTdRy1h/Ax69A+iXaoBXbKeZ3RS06FZpiB75+XskGvvCfS"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"is_favorite\": false,\n    \"name\": \"<DASHBOARD_LIST_TITLE>\",\n    \"dashboard_count\": 0,\n    \"author\": {\n        \"handle\": \"test@datadoghq.com\",\n        \"name\": \"John Doe\"\n    },\n    \"created\": \"2019-04-19T12:29:38.231231+00:00\",\n    \"type\": \"manual_dashboard_list\",\n    \"dashboards\": null,\n    \"modified\": \"2019-04-19T12:29:38.231245+00:00\",\n    \"id\": 57440\n}"
						}
					]
				},
				{
					"name": "Update a Dashboard List",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<NEW_DASHBOARD_LIST_TITLE>\"\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "{{dashboard_list_id}}",
									"description": "The ID of the Dashboard list to update"
								}
							]
						},
						"description": "### Overview\n\nUpdate the name of a dashboard list\n\n### Arguments\n\n*   **`name`** [*required*]: The name of the dashboard list."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<NEW_DASHBOARD_LIST_TITLE>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":DASHBOARD_LIST_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DASHBOARD_LIST_ID",
											"value": "57440",
											"description": "The ID of the Dashboard list to update"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:32:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:32:16 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "Mrmp8VDZzSdQ26N+vFMdetdFLJXOk15EfcDtklL5+NKo9rgYw15wVNwr0Yv3L9F6"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"is_favorite\": false,\n    \"name\": \"<NEW_DASHBOARD_LIST_TITLE>\",\n    \"dashboard_count\": 0,\n    \"author\": {\n        \"handle\": \"test@datadoghq.com\",\n        \"name\": \"John Doe\"\n    },\n    \"created\": \"2019-04-19T12:29:38.231231+00:00\",\n    \"type\": \"manual_dashboard_list\",\n    \"dashboards\": null,\n    \"modified\": \"2019-04-19T12:32:16.412326+00:00\",\n    \"id\": 57440\n}"
						},
						{
							"name": "Update a Dashboard List Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"My Updated Dashboard List\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":DASHBOARD_LIST_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DASHBOARD_LIST_ID",
											"value": "4741",
											"description": "The ID of the Dashboard list to update"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"name\": \"My Updated Dashboard List\",\n    \"created\": \"2018-03-16T09:44:41.476018+00:00\",\n    \"author\": {\n        \"handle\": \"test1@datadoghq.com\",\n        \"name\": \"Author Name\"\n    },\n    \"dashboards\": \"None\",\n    \"modified\": \"2018-03-16T13:45:42.288026+00:00\",\n    \"is_favorite\": false,\n    \"dashboard_count\": 5,\n    \"type\": \"manual_dashboard_list\",\n    \"id\": 4741\n}"
						}
					]
				},
				{
					"name": "Delete a Dashboard List",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "{{dashboard_list_id}}",
									"description": "ID of the Dashboard list to delete"
								}
							]
						},
						"description": "### Overview\n\nDelete an existing dashboard list.\n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":DASHBOARD_LIST_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DASHBOARD_LIST_ID",
											"value": "57440",
											"description": "ID of the Dashboard list to delete"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:35:02 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:35:02 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "DBPi/50MhRYXc2I3YfHX6WdyNepUM+24Obj1bbUu+N5/mG16Mvns9snrz+cj2jUY"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"deleted_dashboard_list_id\": 57440\n}"
						}
					]
				},
				{
					"name": "Get Items of a Dashboard List",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID",
								"dashboards"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "{{dashboard_list_id}}",
									"description": "ID of the Dashbord list to get items from"
								}
							]
						},
						"description": "### Overview\n\nFetch the dashboard list’s dashboard definitions.\n\n### Arguments\n\nThis end point takes no JSON arguments."
					},
					"response": [
						{
							"name": "Get Items of a Dashboard List Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":DASHBOARD_LIST_ID",
										"dashboards"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DASHBOARD_LIST_ID",
											"value": "4741",
											"description": "ID of the Dashbord list to get items from"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"total\": 2,\n    \"dashboards\": [\n        {\n            \"is_shared\": false,\n            \"author\": {\n                \"handle\": None,\n                \"name\": None\n            },\n            \"url\": \"/screen/integration/66/aws-dynamodb\",\n            \"title\": \"AWS DynamoDB\",\n            \"modified\": None,\n            \"created\": None,\n            \"is_favorite\": True,\n            \"is_read_only\": True,\n            \"type\": \"integration_screenboard\",\n            \"id\": 66,\n            \"icon\": \"/static/v/34.254868/images/saas_logos/small/amazon_dynamodb.png\"\n        },\n        {\n            \"is_shared\": false,\n            \"author\": {\n                \"handle\": None,\n                \"name\": None\n            },\n            \"url\": \"/dash/integration/17/postgres---metrics\",\n            \"title\": \"Postgres - Metrics\",\n            \"modified\": None,\n            \"created\": None,\n            \"is_favorite\": True,\n            \"is_read_only\": True,\n            \"type\": \"integration_timeboard\",\n            \"id\": 17,\n            \"icon\": \"/static/v/34.254868/images/saas_logos/small/postgres.png\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Add Items to Dashboard List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"<DASHBOARD_TYPE_1>\",\n            \"id\": <DASHBOARD_ID>\n        },\n        {\n            \"type\": \"<DASHBOARD_TYPE_2>\",\n            \"id\": <DASHBOARD_ID>\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID",
								"dashboards"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "{{dashboard_list_id}}",
									"description": "ID of the Dashboard list to add item into"
								}
							]
						},
						"description": "### Overview\n\nAdd dashboards to an existing dashboard list.\n\n### Arguments\n\n*   **`dashboards`** [*required*]: A list of dashboards to add to the list. Dashboard definitions follow this form:\n    *   **`type`** [*required*]: The type of the dashboard. The type must be one of:\n        * `\"custom_timeboard\"`\n        * `\"custom_screenboard\"`\n        * `\"integration_screenboard\"`\n        * `\"integration_timeboard\"`\n        * `\"host_timeboard\"`\n    *   **`id`** [*required*]: The id of the dashboard."
					},
					"response": []
				},
				{
					"name": "Update Items of a Dashboard List",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"<DASHBOARD_TYPE_1>\",\n            \"id\": <DASHBOARD_ID_1>\n        },\n        {\n            \"type\": \"<DASHBOARD_TYPE_2>\",\n            \"id\": <DASHBOARD_ID_2>\n        }\n        \n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID",
								"dashboards"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "{{dashboard_list_id}}",
									"description": "ID of the Dashboard list to update"
								}
							]
						},
						"description": "### Overview\n\nUpdate dashboards of an existing dashboard list.\n\n### ARGUMENTS\n\n*   **`dashboards`** [*required*]: The new list of dashboards for the dashboard list. Dashboard definitions follow this form:\n    *   **`type`** [*required*]: The type of the dashboard. The type must be one of:\n        * `\"custom_timeboard\"`\n        * `\"custom_screenboard\"`\n        * `\"integration_screenboard\"`\n        * `\"integration_timeboard\"`\n        * `\"host_timeboard\"`\n    *   **`id`** [*required*]: The id of the dashboard."
					},
					"response": []
				},
				{
					"name": "Delete Items from a Dashboard List",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"dashboards\": [\n            {\n            \"type\": \"<DASHBOARD_TYPE_1>\",\n            \"id\": <DASHBOARD_ID_1>\n        \t},\n            {\n            \"type\": \"<DASHBOARD_TYPE_2>\",\n            \"id\": <DASHBOARD_ID_2>\n        \t}\n        ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/dashboard/lists/manual/:DASHBOARD_LIST_ID/dashboards?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":DASHBOARD_LIST_ID",
								"dashboards"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "DASHBOARD_LIST_ID",
									"value": "{{dashboard_list_id}}",
									"description": "ID of the Dashboard list to delete items from"
								}
							]
						},
						"description": "### Overview\n\nDelete dashboards from an existing dashboard list.\n\n### Arguments\n\n*   **`dashboards`** [*required*]: A list of dashboards to remove from the list. Dashboard definitions follow this form:\n    *   **`type`** [*required*]: The type of the dashboard. The type must be one of:\n        * `\"custom_timeboard\"`\n        * `\"custom_screenboard\"`\n        * `\"integration_screenboard\"`\n        * `\"integration_timeboard\"`\n        * `\"host_timeboard\"`\n    *   **`id`** [*required*]: The id of the dashboard."
					},
					"response": []
				}
			],
			"description": "Interact with your dashboard lists through the API to make it easier to organize, find, and share all of your dashboards with your team and organization.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "790ac5f2-163a-49d8-b660-7a05921e31c8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5ab22be5-5b92-4877-84bb-7319a9294e8c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Downtimes",
			"item": [
				{
					"name": "Schedule monitor downtime",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7dbab6ff-c2b2-42d2-9251-42f2247d8762",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"scope\": \"<SCOPE>\",\n  \"start\": \"<START_DATE>\",\n  \"end\": \"<END_DATE>\",\n  \"recurrence\": {\n    \"type\": \"weeks\",\n    \"period\": 1,\n    \"week_days\": [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"],\n    \"until_date\": \"<END_DATE_RECURRENCE>\"\n  \t}\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nSchedule a single Downtime.\n\n### ARGUMENTS\n\n* **`scope`** [*required*]: The scope(s) to which the downtime applies, e.g. `host:app2`. Provide multiple scopes as a comma-separated list, e.g. `env:dev,env:prod`. The resulting downtime applies to sources that matches ALL provided scopes (i.e. `env:dev` **AND** `env:prod`), NOT any of them.\n* **`monitor_tags`** [*optional*, *default*=**no monitor tag filter**]: A comma-separated list of monitor tags, i.e. tags that are applied directly to monitors, *not* tags that are used in monitor queries (which are filtered by the `scope` parameter), to which the downtime applies. The resulting downtime applies to monitors that match ALL provided monitor tags (i.e. `service:postgres` **AND** `team:frontend`), NOT any of them.\n* **`monitor_id`** [*optional*, *default*=**None**]: A single monitor to which the downtime applies. If not provided, the downtime applies to all monitors.\n* **`start`** [*optional*, *default*=**None**]: POSIX timestamp to start the downtime. If not provided, the downtime starts the moment it is created.\n* **`end`** [*optional*, *default*=**None**]: POSIX timestamp to end the downtime. If not provided, the downtime is in effect indefinitely (i.e. until you cancel it).\n* **`message`** [*optional*, *default*=**None**]: A message to include with notifications for this downtime. Email notifications can be sent to specific users by using the same '@username' notation as events\n* **`timezone`** [*optional*, *default* = **UTC**]: The timezone for the downtime.\n* **`recurrence`** [*optional*, *default*=**None**]: An object defining the recurrence of the downtime with a variety of parameters:\n    *   **`type`** the type of recurrence. Choose from: `days`, `weeks`, `months`, `years`.\n    *   **`period`** how often to repeat as an integer. For example to repeat every 3 days, select a type of `days` and a period of `3`.\n    *   **`week_days`** (optional) a list of week days to repeat on. Choose from: `Mon`, `Tue`, `Wed`, `Thu`, `Fri`, `Sat` or `Sun`. Only applicable when `type` is `weeks`. **First letter must be capitalized.**\n    *   **`until_occurrences`** (optional) how many times the downtime is rescheduled. **`until_occurences` and `until_date`** are mutually exclusive\n    *   **`until_date`** (optional) the date at which the recurrence should end as a POSIX timestmap. **`until_occurences` and `until_date`** are mutually exclusive"
					},
					"response": []
				},
				{
					"name": "Update monitor downtime",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "52ac75f8-b1ab-4145-b9fc-eeeb5cfc64aa",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"scope\": \"<SCOPE>\",\n      \"message\": \"<NEW_DOWNTIME_MESSAGE>\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime/:DOWNTIME_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								":DOWNTIME_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "DOWNTIME_ID",
									"value": "{{downtime_id}}",
									"description": "ID of the downtime to update"
								}
							]
						},
						"description": "### Overview\n\nUpdate a single Downtime by downtime_id.\n\n### Arguments\n\n* **`id`** [*required*]: The integer id of the downtime to be updated\n* **`scope`** [*required*]: The scope to which the downtime applies, e.g. 'host:app2'. Provide multiple scopes as a comma-separated list, e.g. 'env:dev,env:prod'. The resulting downtime applies to sources that matches ALL provided scopes (i.e. env:dev AND env:prod), NOT any of them.\n* **`monitor_tags`** [*optional*, *default*=**no monitor tag filter**]: A comma-separated list of monitor tags, i.e. tags that are applied directly to monitors, *not* tags that are used in monitor queries (which are filtered by the `scope` parameter), to which the downtime applies. The resulting downtime applies to monitors that match ALL provided monitor tags (i.e. `service:postgres` **AND** `team:frontend`), NOT any of them.\n* **`monitor_id`** [*optional*, *default*=**None**]: A single monitor to which the downtime applies. If not provided, the downtime applies to all monitors.\n* **`start`** [*optional*, *default* = **original start**]: POSIX timestamp to start the downtime.\n* **`end`** [*optional*, *default* = **original end**]: POSIX timestamp to end the downtime. If not provided, the downtime is in effect indefinitely (i.e. until you cancel it).\n* **`message`** [*required*, *default* = **original message**]: A message to include with notifications for this downtime. Email notifications can be sent to specific users by using the same '@username' notation as events\n* **`timezone`** [*optional*, default = **original timezone** ]: The timezone for the downtime.\n* **`recurrence`** [*optional*, *default* = **original recurrence**]: An object defining the recurrence of the downtime with a variety of parameters:\n    *   **`type`** the type of recurrence. Choose from: `days`, `weeks`, `months`, `years`.\n    *   **`period`** how often to repeat as an integer. For example to repeat every 3 days, select a type of `days` and a period of `3`.\n    *   **`week_days`** (optional) a list of week days to repeat on. Choose from: `Mon`, `Tue`, `Wed`, `Thu`, `Fri`, `Sat` or `Sun`. Only applicable when `type` is `weeks`. **First letter must be capitalized.**\n    *   **`until_occurrences`** (optional) how many times the downtime is rescheduled. **`until_occurences` and `until_date`** are mutually exclusive\n    *   **`until_date`** (optional) the date at which the recurrence should end as a POSIX timestmap. **`until_occurences` and `until_date`** are mutually exclusive"
					},
					"response": []
				},
				{
					"name": "Cancel monitor downtime",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime/:DOWNTIME_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								":DOWNTIME_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "DOWNTIME_ID",
									"value": "{{downtime_id}}",
									"description": "ID of the downtime to delete"
								}
							]
						},
						"description": "DELETE a Downtime Detail by downtime_id"
					},
					"response": []
				},
				{
					"name": "Cancel monitor downtimes By Scope",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"scope\": \"<SCOPE>\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime/cancel/by_scope?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								"cancel",
								"by_scope"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nDELETE all Downtimes that match the scope of X\n\n### Arguments\n\n* **`scope`** [*required*]:   Cancel all downtimes with the given scope(s), e.g.: `env:prod`, `role:db,role:db-slave`"
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n      \"scope\": \"host:i-123\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/downtime/cancel/by_scope?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										"cancel",
										"by_scope"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"cancelled_ids\": [\n        123456789,\n        123456790\n    ]\n}"
						}
					]
				},
				{
					"name": "Get a monitor downtime",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime/:DOWNTIME_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								":DOWNTIME_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "DOWNTIME_ID",
									"value": "{{downtime_id}}",
									"description": "ID of the downtime to fetch"
								}
							]
						},
						"description": "### Overview\n\nGet Downtime Detail by downtime_id\n\n### Arguments \n\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "Get a monitor downtime Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/downtime/:DOWNTIME_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										":DOWNTIME_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "DOWNTIME_ID",
											"value": "2910",
											"description": "ID of the downtime to fetch"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n  \"active\": true,\n  \"disabled\": false,\n  \"end\": 1420447087,\n  \"id\": 2910,\n  \"message\": \"Doing some testing on staging.\",\n  \"monitor_tags\": [\"*\"],\n  \"scope\": [\"env:staging\"],\n  \"start\": 1420387032\n}"
						}
					]
				},
				{
					"name": "Get all mointor downtimes",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/downtime?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"downtime"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nGet All Scheduled Downtimes\n\n### ARGUMENTS\n\n* **`current_only`** [*optional*, *default* = **False**]: Only return downtimes that are activewhen the request is made."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/downtime?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"downtime"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "[\n  {\n    \"active\": false,\n    \"disabled\": true,\n    \"end\": 1412793983,\n    \"id\": 1625,\n    \"monitor_tags\": [\"*\"],\n    \"scope\": [\n      \"env:staging\"\n    ],\n    \"start\": 1412792983\n  },\n  {\n    \"active\": false,\n    \"disabled\": true,\n    \"end\": null,\n    \"id\": 1626,\n    \"monitor_tags\": [\"*\"],\n    \"scope\": [\n      \"*\"\n    ],\n    \"start\": 1412792985\n  }\n]"
						}
					]
				}
			],
			"description": "[Downtiming](https://docs.datadoghq.com/monitors/downtimes) gives you greater control over monitor notifications by allowing you to globally exclude scopes from alerting. Downtime settings, which can be scheduled with start and end times, prevent all alerting related to specified Datadog tags.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0c40a532-a4f5-4fe7-8813-c13eafa1d817",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f57c6e73-48a8-4c0d-844e-d8cdf549036e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Embeddable Graphs",
			"item": [
				{
					"name": "Get all embeddable graphs",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nGets a list of previously created embeddable graphs.\n\nReturns: A JSON list containing information on previously created embeds from both the UI and the API. Each JSON graph response is in the same format as returned by GET `api/v1/graph/embed/<EMBED_ID>`.\n\n### ARGUMENTS\n\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/graph/embed?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{ \"embedded_graphs\": [\n    {\n      \"embed_id\": \"5f585b01c81b12ecdf5f40df0382738d0919170639985d3df5e2fc4232865b0c\",\n      \"template_variables\": [],\n      \"html\": \"&lt;iframe src=\\&quot;https://app.datadoghq.com/graph/embed?token=5f585b01c81b12ecdf5f40df0382738d0919170639985d3df5e2fc4232865b0c&amp;height=300&amp;width=600&amp;legend=true\\&quot; width=\\&quot;600\\&quot; height=\\&quot;300\\&quot; frameBorder=\\&quot;0\\&quot;&gt;&lt;/iframe&gt;\",\n      \"graph_title\": \"Embed created through API\",\n      \"revoked\": false,\n      \"dash_url\": null,\n      \"shared_by\": 3658,\n      \"dash_name\": null\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create embed graph",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"graph_json\": {\n\t\t\"requests\":[\n\t\t\t\t{\n\t\t\t\t\t\"q\":\"avg:system.load.1{*}\"\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t],\n\t\t\"viz\":\"timeseries\",\n\t\t\"events\":[]\n\t},\n\t\"timeframe\": \"1_hour\",\n\t\"size\": \"medium\",\n\t\"legend\":\"yes\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nCreates a new embeddable graph.\n\nReturns: A JSON consisting of the same elements returned by GET `api/v1/graph/embed/<EMBED_ID>`. On failure, the return value is a JSON containing an error message {errors: [messages]}.\n\nNote: If an embed already exists for the exact same query in a given organization, the older embed is returned instead of creating a new embed.\n\nIf you are interested in using template variables, see [Embeddable Graphs with Template Variables](https://docs.datadoghq.com/graphing/faq/embeddable-graphs-with-template-variables)\n\n### Arguments\n\n* **`graph_json`** [*required*]: The graph definition in JSON. Same format that is available on the JSON tab of the graph editor\n* **`timeframe`** [*optional*, *default*=**1_hour**]: The timegrame for the graph. Must be one of:\n    * **1_hour**,\n    * **4_hours**, \n    * **1_day**, \n    * **2_days**,\n    * **1_week**.\n* **`size`** [*optional*, *default*=**medium**]: The size of the graph. Must be one:\n    * **small**, \n    * **medium**, \n    * **large**, \n    * **xlarge**.\n* **`legend`** [*optional*, *default*=**no**]: The flag determining if the graph includes a legend. Must be one of **yes** or **no**.\n* **`title`** [*optional*, *default*=**Embed created through API**]: Determines graph title. *Must be at least 1 character.*"
					},
					"response": []
				},
				{
					"name": "Get a specific embed",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed/:EMBED_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":EMBED_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"description": "ID of the embed to fetch",
									"key": "EMBED_ID",
									"value": "{{embed_id}}"
								}
							]
						},
						"description": "### Overview\n\nGet the HTML fragment for a previously generated embed with embed_id.\n\nReturns: A JSON object with 8 elements:\n\n* `embed_id`: Token of the embed\n* `graph_title`: Tile of the graph\n* `dash_name`: Name of the dashboard the graph is on (null if none)\n* `dash_url`: URL of the dashboard the graph is on (null if none)\n* `shared_by`: ID of the use who shared the embed\n* `html`: HTML fragment for the embed (iframe)\n* `revoked`: Boolean flag for whther or not the embed is revoked\n\nOn failure, the return value is a JSON containing an error message {errors: [messages]}.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Enable embed",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed/:EMBED_ID/enable?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":EMBED_ID",
								"enable"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "EMBED_ID",
									"value": "{{embed_id}}",
									"description": "ID of the Embed to enable"
								}
							]
						},
						"description": "### Overview\n\nEnable a specified embed.\n\nReturns: A JSON containing the success message `{success: [message]}`. On failure, the return value is a JSON containing an error message `{errors: [messages]}`.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Revoke embed",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/embed/:EMBED_ID/revoke?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":EMBED_ID",
								"revoke"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"description": "ID of the embed to revoke",
									"key": "EMBED_ID",
									"value": "{{embed_id}}"
								}
							]
						},
						"description": "### Overview\n\nRevoke a specified embed.\n\nReturns: A JSON containing the success message `{success: [message]}`. On failure, the return value is a JSON containing an error message `{errors: [messages]}`.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": []
				}
			],
			"description": "You can interact with embeddable graphs through the API.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b6461520-9556-4e49-89b7-badb27c306c1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a3160798-7336-4bef-9902-62ed0d564d51",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Post an Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"alert_type\": \"info\",\n    \"title\": \"<EVENT_TITLE>\",\n    \"text\": \"<EVENT_TEXT>\",\n    \"tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"priority\": \"normal\",\n    \"source_type_name\": \"jenkins\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/events?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"events"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nThis endpoint allows you to post events to the stream. Tag them, set priority and event aggregate them with other events.\n\n### Arguments\n\n* **`title`** [*required*]:   The event title. *Limited to 100 characters.* Use `msg_title` with [the Datadog Ruby library](https://github.com/DataDog/dogapi-rb).\n* **`text`** [*required*]:   The body of the event. *Limited to 4000 characters.* The text supports [markdown](https://docs.datadoghq.com/graphing/event_stream/#markdown-events). Use `msg_text` with [the Datadog Ruby library](https://github.com/DataDog/dogapi-rb)\n* **`date_happened`** [*optional*, *default* = **now**]: POSIX timestamp of the event. Must be sent as an integer (i.e. no quotes). *Limited to events no older than 1 year, 24 days (389 days)*\n* **`priority`** [*optional*, *default* = **normal**]: The priority of the event: **normal** or **low**.\n* **`host`** [*optional*, *default*=**None**]: Host name to associate with the event. Any tags associated with the host are also applied to this event.\n* **`tags`** [*optional*, *default*=**None**]: A list of tags to apply to the event.\n* **`alert_type`** [*optional*, *default* = **info**]: If it's an alert event, set its type between: **error**, **warning**, **info**, and **success**.\n* **`aggregation_key`** [*optional*, *default*=**None**]: An arbitrary string to use for aggregation. *Limited to 100 characters.*   If you specify a key, all events using that key are grouped together in the Event Stream.\n* **`source_type_name`** [*optional*, *default*=**None**]: The type of event being posted. Options: **nagios**, **hudson**, **jenkins**, **my_apps**, **chef**, **puppet**, **git**, **bitbucket**...  [Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)"
					},
					"response": [
						{
							"name": "202 - Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alert_type\": \"info\",\n    \"title\": \"<EVENT_TITLE>\",\n    \"text\": \"<EVENT_TEXT>\",\n    \"tags\": [\n        \"<TAG_KEY>:<TAG_VALUE>\"\n    ],\n    \"priority\": \"normal\",\n    \"source_type_name\": \"jenkins\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/events?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:26:30 GMT"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "DD-POOL",
									"value": "propjoe"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"ok\",\n    \"event\": {\n        \"id\": 4889114353672951410,\n        \"title\": \"<EVENT_TITLE>\",\n        \"text\": \"<EVENT_TEXT>\",\n        \"date_happened\": 1555676790,\n        \"handle\": null,\n        \"priority\": \"normal\",\n        \"related_event_id\": null,\n        \"tags\": [\n            \"<TAG_KEY>:<TAG_VALUE>\"\n        ],\n        \"url\": \"https://app.datadoghq.com/event/event?id=4889114353672951410\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get an Event",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/events/:EVENT_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"events",
								":EVENT_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "EVENT_ID",
									"value": "{{event_id}}",
									"description": "ID of the event to fetch"
								}
							]
						},
						"description": "### Overview\n\nGet event details by event_id\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/events/:EVENT_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										":EVENT_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "EVENT_ID",
											"value": "4889114353672951410",
											"description": "ID of the event to fetch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:27:13 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:27:13 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "Pi9DlpS5UXWqN+f/BbMF8OzGyuYELmF4y2GgpG1eyyaolF9CYoCAaZi6vG75lfLh"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_events"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"event\": {\n        \"date_happened\": 1555676790,\n        \"alert_type\": \"info\",\n        \"resource\": \"/api/v1/events/4889114353672951410\",\n        \"title\": \"<EVENT_TITLE>\",\n        \"url\": \"/event/event?id=4889114353672951410\",\n        \"text\": \"<EVENT_TEXT>\",\n        \"tags\": [\n            \"tag_key_:_tag_value\"\n        ],\n        \"device_name\": null,\n        \"priority\": \"normal\",\n        \"host\": null,\n        \"id\": 4889114353672951410\n    }\n}"
						}
					]
				},
				{
					"name": "Delete an Event",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\":\"Something big happened!\",\n\"text\":\"And let me tell you all about it here!\",\n\"tags\":\"environment:prod\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/events/:EVENT_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"events",
								":EVENT_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"description": "ID of the event to delete",
									"key": "EVENT_ID",
									"value": "{{event_id}}"
								}
							]
						},
						"description": "### Overview\n\nDELETE event details by event_id\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\":\"Something big happened!\",\n\"text\":\"And let me tell you all about it here!\",\n\"tags\":\"environment:prod\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/events/:EVENT_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										":EVENT_ID"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "EVENT_ID",
											"value": "4889114353672951410",
											"description": "ID of the event to delete"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:27:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:27:48 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "pEh3gYWQMYdKVVOh5Pkm23Q0brswOQx0EZl2X7y7zdDnXrgUIeNhlDkso3nnYL6e"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_sameorig"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"deleted_event_id\": \"4889114353672951410\"\n}"
						}
					]
				},
				{
					"name": "Query the event stream",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b2fd1ea-4374-492b-bb28-f94a3bac8053",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"start\":<START_DATE>,\n\t\"end\":<END_DATE>\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/events?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"events"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nThe [event stream](https://docs.datadoghq.com/graphing/event_stream) can be queried and filtered by time, priority, sources and tags.\nNote: if the event you're querying contains markdown formatting of any kind, you may see characters such as %,\\,n in your output\n\n### Arguments\n\n* **`start`** [*required*]: POSIX timestamp.\n* **`end`** [*required*]: POSIX timestamp.\n* **`priority`** [*optional*, *default*=**None**]: Priority of your events: **low** or **normal**.\n* **`sources`** [*optional*, *default*=**None**]: A comma separated string of sources.\n* **`tags`** [*optional*, *default*=**None**]: A comma separated string of tags. To use a negative tag filter, prefix your tag with `-`. See the [Event Stream documentation](https://docs.datadoghq.com/graphing/event_stream/#event-query-language) to learn more.\n* **`unaggregated`** [*optional*, *default*=*false*]: Set unaggregated to `true` to return all events within the specified [`start`,`end`] timeframe. Otherwise if an event is aggregated to a parent event with a timestamp outside of the timeframe, it won't be available in the output."
					},
					"response": [
						{
							"name": "Query the event stream Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"start\":1555670956,\n\t\"end\":1555674556\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/events?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"events\": [\n        {\n            \"alert_type\": \"info\",\n            \"comments\": [],\n            \"date_happened\": 1346273496,\n            \"device_name\": null,\n            \"host\": null,\n            \"id\": 1375910067732769979,\n            \"is_aggregate\": false,\n            \"priority\": \"normal\",\n            \"resource\": \"/api/v1/events/1375910067732769979\",\n            \"source\": \"My Apps\",\n            \"tags\": [\n                \"application:web\",\n                \"version:1\"\n            ],\n            \"text\": \"And let me tell you all about it here!\",\n            \"title\": \"Something big happened!\",\n            \"url\": \"/event/jump_to?event_id=1375910067732769979\"\n        },\n        {\n            \"alert_type\": \"info\",\n            \"comments\": [],\n            \"date_happened\": 1346273469,\n            \"device_name\": null,\n            \"host\": null,\n            \"id\": 1375909614428331251,\n            \"is_aggregate\": false,\n            \"priority\": \"normal\",\n            \"resource\": \"/api/v1/events/1375909614428331251\",\n            \"source\": \"My Apps\",\n            \"tags\": [\n                \"application:web\",\n                \"version:1\"\n            ],\n            \"text\": \"And let me tell you all about it here!\",\n            \"title\": \"Something big happened!\",\n            \"url\": \"/event/jump_to?event_id=1375909614428331251\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"description": "The events service allows you to programatically post events to the [event stream](https://docs.datadoghq.com/graphing/event_stream) and fetch events from the [event stream](https://docs.datadoghq.com/graphing/event_stream).\n\nEvents are limited to 4000 characters. If an event is sent out with a message containing more than 4000 characters only the 4000 first characters are displayed.\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0551dbf6-4873-4a07-9324-2cc33ad1d6c9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "407da228-6499-42ec-939b-b7dcbee8133d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Graphs",
			"item": [
				{
					"name": "Graph a Snapshot",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "845f4a29-943c-4069-9c7b-29a8a0312b85",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/graph/snapshot?api_key={{dd_api_key}}&application_key={{dd_app_key}}&metric_query={{metric_query}}&start={{from_ts}}&end={{to_ts}}&title={{title}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"snapshot"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								},
								{
									"key": "metric_query",
									"value": "{{metric_query}}",
									"description": "The metric query to graph for the snapshot"
								},
								{
									"key": "start",
									"value": "{{from_ts}}",
									"description": "The POSIX timestamp of the start of the query."
								},
								{
									"key": "end",
									"value": "{{to_ts}}",
									"description": "The POSIX timestamp of the end of the query."
								},
								{
									"key": "title",
									"value": "{{title}}",
									"description": "A title for the graph. If no title is specified, the graph doesn't have a title."
								}
							]
						},
						"description": "### Overview\n\nGet a Graph snapshot.\n\n##### ARGUMENTS\n\n* **`metric_query`** [*required*]: The metric query.\n* **`start`** [*required*]: The POSIX timestamp of the start of the query.\n* **`end`** [*required*]: The POSIX timestamp of the end of the query.\n* **`event_query`** [*optional*, *default*=**None**]: A query that adds event bands to the graph.\n* **`graph_def`** [*optional*, *default*=**None**]: A JSON document defining the graph. `graph_def` can be used instead of `metric_query`. The JSON document uses the [grammar defined here](https://docs.datadoghq.com/graphing/graphing_json/#grammar) and should be formatted to a single line then URLEncoded.\n* **`title`** [*optional*, *default*=**None**]: A title for the graph. If no title is specified, the graph doesn't have a title."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/graph/snapshot?api_key={{dd_api_key}}&application_key={{dd_app_key}}&metric_query=system.load.1{*}&start=1555670956&end=1555674556",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"snapshot"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										},
										{
											"key": "metric_query",
											"value": "system.load.1{*}",
											"description": "The metric query to graph for the snapshot"
										},
										{
											"key": "start",
											"value": "1555670956",
											"description": "The POSIX timestamp of the start of the query."
										},
										{
											"key": "end",
											"value": "1555674556",
											"description": "The POSIX timestamp of the end of the query."
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"metric_query\": \"system.load.1{*}\",\n    \"snapshot_url\": \"https://s3.amazonaws.com/dd-snapshots-prod/org_1499/2013-07-19/53fd79f024e7796f4ca399f1d90adf3cf95a9bb8.png\"\n}"
						}
					]
				}
			],
			"description": "You can take graph snapshots using the API."
		},
		{
			"name": "Hosts",
			"item": [
				{
					"name": "Search hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/hosts?api_key={{dd_api_key}}&application_key={{dd_app_key}}&sort_field=cpu&sort_dir=desc&start=0&count=100",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"hosts"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								},
								{
									"key": "filter",
									"value": "",
									"description": "Query string to filter search results.",
									"disabled": true
								},
								{
									"key": "sort_field",
									"value": "cpu",
									"description": "Sort hosts by the given field. Options: status, apps, cpu, iowait, load"
								},
								{
									"key": "sort_dir",
									"value": "desc",
									"description": "Direction of sort. Options: asc, desc"
								},
								{
									"key": "start",
									"value": "0",
									"description": "Host result to start search from."
								},
								{
									"key": "count",
									"value": "100",
									"description": "Number of host results to return. Max 100."
								}
							]
						},
						"description": "### Overview\n\nThis endpoint allows searching for hosts by name, alias, or tag. Hosts live within the past 3 hours are included. Results are paginated with a max of 100 results at a time.\n\n### Arguments\n\n* **`filter`** [*optional*, *default*=**None**]: Query string to filter search results.\n* **`sort_field`** [*optional*, *default*=**cpu**]: Sort hosts by the given field. Options: **status**, **apps**, **cpu**, **iowait**, **load**\n* **`sort_dir`** [*optional*, *default*=**desc**]: Direction of sort. Options: **asc**, **desc**\n* **`start`** [*optional*, *default*=**0**]: Host result to start search from.\n* **`count`** [*optional*, *default*=**100**]: Number of host results to return. Max 100."
					},
					"response": []
				},
				{
					"name": "Host totals",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/hosts/totals?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"hosts",
								"totals"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							]
						},
						"description": "### Overview\n\nThis endpoint returns the total number of active and up hosts in your Datadog account. Active means the host has reported in the past hour, and up means it has reported in the past two hours.\n\n### ARGUMENTS\n\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/hosts/totals?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"hosts",
										"totals"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Apr 2019 12:25:32 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:25:32 GMT; secure; HttpOnly"
								},
								{
									"key": "X-DD-VERSION",
									"value": "35.1246853"
								},
								{
									"key": "X-DD-Debug",
									"value": "3XqVFN2Zs4pXLtLC34puH8ko0mMZ3gS13N0v7C1YDmW4khLKWWVMErDLOZ9LQekV"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "DD-POOL",
									"value": "dogweb_query"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800;"
								}
							],
							"cookie": [],
							"body": "{\n    \"total_up\": 3,\n    \"total_active\": 1\n}"
						}
					]
				},
				{
					"name": "Mute a Host",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5aa35b4d-447e-4099-a0ee-37451d29d751",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = 30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"end\": <POSIX_TIMESTAMP_OF_END_MUTE>,\n    \"message\": \"<MESSAGE>\",\n    \"override\": \"false\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/host/:HOSTNAME/mute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"host",
								":HOSTNAME",
								"mute"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "{{hostname}}",
									"description": "Name of the host to mute"
								}
							]
						},
						"description": "### Overview\n\nMute a host in order to avoid any monitor to trigger on it.\n\n### Arguments\n\n* **`end`** [*optional*, *default*=**None**]: POSIX timestamp when the host is unmuted. If omitted, the host remains muted until explicitly unmuted.\n* **`message`** [*optional*, *default*=**None**]: Message to associate with the muting of this host.\n* **`override`** [*optional*, *default*=**False**]: If true and the host is already muted, replaces existing host mute settings."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n      \"message\": \"Muting this host for a test!\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/host/:HOSTNAME/mute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"host",
										":HOSTNAME",
										"mute"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "HOSTNAME",
											"value": "test.host",
											"description": "Name of the host to mute"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"action\": \"Muted\",\n    \"hostname\": \"test.host\",\n    \"message\": \"Muting this host for a test!\"\n}"
						}
					]
				},
				{
					"name": "Unmute a Host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"Un-Muting this host for a test!\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/host/:HOSTNAME/unmute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"host",
								":HOSTNAME",
								"unmute"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}",
									"description": "Your Datadog API key"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}",
									"description": "Your Datadog application key"
								}
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "{{hostname}}",
									"description": "Name of the host to unmute"
								}
							]
						},
						"description": "### Overview\n\nUnmute a previously muted host\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"Un-Muting this host for a test!\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/host/:HOSTNAME/unmute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"host",
										":HOSTNAME",
										"unmute"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									],
									"variable": [
										{
											"key": "HOSTNAME",
											"value": "test.host",
											"description": "Name of the host to unmute"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"action\": \"Unmuted\",\n    \"hostname\": \"test.host\",\n    \"message\": \"Un-Muting this host for a test!\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Integrations",
			"item": [
				{
					"name": "AWS",
					"item": [
						{
							"name": "List AWS Accounts",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/aws?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								},
								"description": "### Overview\n\nList all configured AWS accounts for Datadog.\n\n### Arguments\n\nThis endpoint takes no JSON argument."
							},
							"response": [
								{
									"name": "List AWS Accounts Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://app.datadoghq.com/api/v1/integration/aws?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
											"protocol": "https",
											"host": [
												"app",
												"datadoghq",
												"com"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"aws"
											],
											"query": [
												{
													"key": "api_key",
													"value": "{{dd_api_key}}",
													"description": "Your Datadog API key"
												},
												{
													"key": "application_key",
													"value": "{{dd_app_key}}",
													"description": "Your Datadog application key"
												}
											]
										}
									},
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\"accounts\":\n    [{\n        \"account_id\": 112233445566,\n        \"role_name\": \"SomeDatadogRole\",\n        \"filter_tags\": [\n        \t'filter123'\n        ],\n        \"host_tags\": [\n        \t'account:demo'\n        \t],\n        \"account_specific_namespace_rules\": {\"opsworks\":false}\n    }]\n}"
								}
							]
						},
						{
							"name": "Create an AWS Account in Datadog",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"<YOUR_AWS_ACCOUNT_ID>\",\n    \"filter_tags\": [\n        \"env:staging\"\n    ],\n    \"host_tags\": [\n        \"account:staging\",\n        \"account:customer1\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opsworks\": false\n    }\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/aws?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								},
								"description": "### Overview\n\nConfigure your Datadog-AWS integration directly through Datadog API. [Read more about Datadog-AWS integration][1].\n\n### Arguments\n\n* **`account_id`** [*required*]: Your AWS Account ID without dashes. [Consult the Datadog AWS integration to learn more][2] about your AWS account ID.\n\n* **`access_key_id`** [*optional*, *default*=**None**]: If your AWS account is a GovCloud or China account, enter the corresponding Access Key ID.\n\n* **`role_name`** [*required*]: Your Datadog role delegation name. [Consult the Datadog AWS integration to learn more][3] about your AWS account Role name.\n\n* **`filter_tags`** [*optional*, *default*=**None**]: Array of EC2 tags (in the form `key:value`) defines a filter that Datadog use when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used.\n    Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding `!` before the tag.\n    e.x. `env:production,instance-type:c1.*,!region:us-east-1`\n    [Read more about EC2 tagging in AWS tagging documentation][4].\n\n* **`host_tags`** [*optional*, *default*=**None**]: Array of tags (in the form `key:value`) to add to all hosts and metrics reporting through this integration.\n\n* **`account_specific_namespace_rules`** [*optional*, *default*=**None**]: An object (in the form `{\"namespace1\":true/false, \"namespace2\":true/false}`) that enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the `https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules` endpoint.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_web_services\n[2]: https://docs.datadoghq.com/integrations/amazon_web_services/#configuration\n[3]: https://docs.datadoghq.com/integrations/amazon_web_services/#installation\n[4]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html"
							},
							"response": []
						},
						{
							"name": "Delete an AWS Integration",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"<YOUR_AWS_ACCOUNT_ID>\",\n    \"role_name\": \"DatadogAWSIntegrationRole\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/aws?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								},
								"description": "### Overview\n\nDelete your Datadog-AWS integration directly through Datadog API. [Read more about Datadog-AWS integration][1].\n\n### Arguments\n\n* **`account_id`** [*required*]: Your AWS Account ID without dashes. [Consult the Datadog AWS integration to learn more][2] about your AWS account ID.\n\n* **`access_key_id`** [*optional*, *default*=**None**]: If your AWS account is a GovCloud or China account, enter the corresponding Access Key ID.\n\n* **`role_name`** [*required*]: Your Datadog role delegation name. [Consult the Datadog AWS integration to learn more][3] about your AWS account Role name.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_web_services\n[2]: https://docs.datadoghq.com/integrations/amazon_web_services/#configuration\n[3]: https://docs.datadoghq.com/integrations/amazon_web_services/#installation"
							},
							"response": []
						},
						{
							"name": "List available namespace rules",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"available_namespace_rules"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}",
											"description": "Your Datadog application key"
										}
									]
								},
								"description": "### Overview\n\nList available namespace rules for your AWS integration\n\n### Arguments\n\nThis endpoint takes no JSON arguments"
							},
							"response": [
								{
									"name": "200 - OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"com"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"aws",
												"available_namespace_rules"
											],
											"query": [
												{
													"key": "api_key",
													"value": "{{dd_api_key}}",
													"description": "Your Datadog API key"
												},
												{
													"key": "application_key",
													"value": "{{dd_app_key}}",
													"description": "Your Datadog application key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Apr 2019 12:23:16 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "Set-Cookie",
											"value": "DD-PSHARD=211; Max-Age=604800; Path=/; expires=Fri, 26-Apr-2019 12:23:16 GMT; secure; HttpOnly"
										},
										{
											"key": "X-DD-VERSION",
											"value": "35.1246853"
										},
										{
											"key": "X-DD-Debug",
											"value": "/GVHE8sGGDu2Pwj4vkrLHXcvRNw6txpVQGGgaqarvn67YsIjXAZ36tYtYz+JhwVU"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "DD-POOL",
											"value": "dogweb_sameorig"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15724800;"
										}
									],
									"cookie": [],
									"body": "[\n    \"api_gateway\",\n    \"application_elb\",\n    \"appsync\",\n    \"auto_scaling\",\n    \"billing\",\n    \"budgeting\",\n    \"cloudfront\",\n    \"cloudsearch\",\n    \"cloudwatch_events\",\n    \"cloudwatch_logs\",\n    \"codebuild\",\n    \"collect_custom_metrics\",\n    \"crawl_alarms\",\n    \"ddos_protection\",\n    \"directconnect\",\n    \"dms\",\n    \"documentdb\",\n    \"dynamodb\",\n    \"ebs\",\n    \"ec2\",\n    \"ec2api\",\n    \"ec2spot\",\n    \"ecs\",\n    \"efs\",\n    \"elasticache\",\n    \"elasticbeanstalk\",\n    \"elastictranscoder\",\n    \"elb\",\n    \"emr\",\n    \"es\",\n    \"firehose\",\n    \"gamelift\",\n    \"iot\",\n    \"kinesis\",\n    \"kinesis_analytics\",\n    \"kms\",\n    \"lambda\",\n    \"lex\",\n    \"ml\",\n    \"mq\",\n    \"nat_gateway\",\n    \"network_elb\",\n    \"opsworks\",\n    \"polly\",\n    \"rds\",\n    \"redshift\",\n    \"rekognition\",\n    \"route53\",\n    \"s3\",\n    \"sagemaker\",\n    \"ses\",\n    \"sns\",\n    \"sqs\",\n    \"state_machine\",\n    \"storage_gateway\",\n    \"swf\",\n    \"vpn\",\n    \"waf\",\n    \"workspaces\",\n    \"xray\"\n]"
								}
							]
						},
						{
							"name": "List AWS Filtering rules",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"YOUR_AWS_ACCOUNT_ID\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/aws/filtering?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "### Overview\n\nList AWS Accounts (role-based only) in Datadog.\n\n### Arguments\n\nThis endpoint takes no JSON arguments."
							},
							"response": [
								{
									"name": "400 Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_id\": \"YOUR_AWS_ACCOUNT_ID\"\n}"
										},
										"url": {
											"raw": "https://api.datadoghq.com/api/v1/integration/aws/filtering?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
											"protocol": "https",
											"host": [
												"api",
												"datadoghq",
												"com"
											],
											"path": [
												"api",
												"v1",
												"integration",
												"aws",
												"filtering"
											],
											"query": [
												{
													"key": "api_key",
													"value": "{{dd_api_key}}",
													"description": "Your Datadog API key"
												},
												{
													"key": "application_key",
													"value": "{{dd_app_key}}",
													"description": "Your Datadog application key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Apr 2019 12:23:43 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "98"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache"
										},
										{
											"key": "X-DD-VERSION",
											"value": "35.1246853"
										},
										{
											"key": "DD-POOL",
											"value": "dogweb_sameorig"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15724800;"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        \"AWS Integration not yet installed. Please manually install it to add AWS accounts.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Configure AWS Filtering rule Copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"YOUR_AWS_ACCOUNT_ID\",\n    \"namespace\": \"sqs\",\n    \"tag_filter_str\": \"include_tags,!exclude_tags\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/aws/filtering?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "List AWS Accounts (role-based only) in Datadog"
							},
							"response": []
						},
						{
							"name": "Delete AWS Filtering rule Copy",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"YOUR_AWS_ACCOUNT_ID\",\n    \"namespace\": \"sqs\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/aws/filtering?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "List AWS Accounts (role-based only) in Datadog"
							},
							"response": []
						}
					],
					"description": "Configure your Datadog-AWS integration directly through Datadog API.\n\nMore Details Here: https://docs.datadoghq.com/integrations/amazon_web_services/",
					"_postman_isSubFolder": true
				},
				{
					"name": "Azure",
					"item": [
						{
							"name": "List Azure Account",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/azure?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an Azure Account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tenant_name\": \"<AZURE_TENANT_NAME>\",\n    \"client_id\": \"<AZURE_CLIENT_ID>\",\n    \"client_secret\": \"<AZURE_CLIENT_SECRET>\",\n    \"host_filters\": \"<KEY_1>:<VALUE_1>,<KEY_2>:<VALUE_2>\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/azure?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Azure Account's Host Filters",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tenant_name\": \"<AZURE_TENANT_NAME>\",\n    \"client_id\": \"<AZURE_CLIENT_ID>\",\n    \"host_filters\": \"<KEY_1>:<VALUE_1>,<KEY_2>:<VALUE_2>\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/azure?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an Azure Account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tenant_name\": \"<AZURE_TENANT_NAME>\",\n    \"client_id\": \"<AZURE_CLIENT_ID>\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/azure?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "ARGUMENTS\nRefer to the Datadog-Azure integration installation instructions to see how to obtain the following field values for your organization.\n\ntenant_name [required]:\n\nYour Azure Active Directory ID.\n\nclient_id [required]:\n\nYour Azure web application ID.\n\nclient_secret [required]:\n\nYour Azure web application secret key.\n\nhost_filters [optional, default=None]:\n\nLimit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0aa7e2a3-8d06-4a0c-b8bb-6fb788526e43",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ad9a861e-a18a-412a-98b3-e1497cf9236b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Google Cloud Platform",
					"item": [
						{
							"name": "List GCP Accounts",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/gcp?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "All of the following fields’ values are provided by the JSON service account key file created in the GCP Console for service accounts; Refer to the Datadog-Google Cloud Platform integration installation instructions to see how to generate one for your organization. For further references, consult the Google Cloud service account documentation.\n\ntype [required]:\n\nShould be service_account, it can be found in your JSON service account key.\n\nproject_id [required]:\n\nYour Google Cloud project ID found in your JSON service account key.\n\nprivate_key_id [required]:\n\nYour private key ID found in your JSON service account key.\n\nprivate_key [required]:\n\nYour private key name found in your JSON service account key.\n\nclient_email [required]:\n\nYour email found in your JSON service account key.\n\nclient_id [required]:\n\nYour ID found in your JSON service account key.\n\nauth_uri [required]:\n\nShould be https://accounts.google.com/o/oauth2/auth.\n\ntoken_uri [required]:\n\nShould be https://accounts.google.com/o/oauth2/token.\n\nauth_provider_x509_cert_url [required]:\n\nShould be https://www.googleapis.com/oauth2/v1/certs.\n\nclient_x509_cert_url [required]:\n\nShould be https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL> where <CLIENT_EMAIL> is the email found in your JSON service account key.\n\nhost_filters [optional]:\n\nLimit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n\nautomute [optional, default=false]:\n\nSilence monitors for expected GCE instance shutdowns."
							},
							"response": []
						},
						{
							"name": "Create GCP Account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"service_account\",\n    \"project_id\": \"<GCP_PROJECT_ID>\",\n    \"private_key_id\": \"<PRIVATE_KEY_ID>\",\n    \"private_key\": \"<PRIVATE_KEY>\",\n    \"client_email\": \"<CLIENT_EMAIL>\",\n    \"client_id\": \"<CLIENT_ID>\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"host_filters\": \"<KEY_1>:<VALUE_1>,<KEY_2>:<VALUE_2>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/gcp?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a GCP Service Account's automute option",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"project_id\": \"<GCP_PROJECT_ID>\",\n    \"client_email\": \"<CLIENT_EMAIL>\",\n    \"automute\": true\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/gcp?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a GCP Service Account's host filters",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"project_id\": \"<GCP_PROJECT_ID>\",\n    \"client_email\": \"<CLIENT_EMAIL>\",\n    \"host_filters\": \"<KEY_1>:<VALUE_1>,<KEY_2>:<VALUE_2>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/gcp?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a GCP Service Account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"project_id\": \"<GCP_PROJECT_ID>\",\n    \"client_email\": \"<CLIENT_EMAIL>\"\n}"
								},
								"url": {
									"raw": "https://api.datadoghq.com/api/v1/integration/gcp?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"api",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PagerDuty",
					"item": [
						{
							"name": "Get PagerDuty Configuration",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/pagerduty?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete PagerDuty Configuration",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/pagerduty?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create / Replace PagerDuty Coniguration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"services\": [\n        {\n            \"service_name\": \"test_00\",\n            \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        },\n        {\n            \"service_name\": \"test_01\",\n            \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        }\n    ],\n    \"subdomain\": \"my-pd\",\n    \"schedules\": [\n        \"https://my-pd.pagerduty.com/schedules#PCPYT4M\",\n        \"https://my-pd.pagerduty.com/schedules#PKTPB7P\"\n    ],\n    \"api_token\": \"<PAGERDUTY_TOKEN>\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/pagerduty?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Configure your Datadog-PagerDuty integration directly through Datadog API."
							},
							"response": []
						},
						{
							"name": "Update: Add New Services and Schedules",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"services\": [\n        {\n            \"service_name\": \"test_00\",\n            \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        },\n        {\n            \"service_name\": \"test_01\",\n            \"service_key\": \"<PAGERDUTY_SERVICE_KEY>\"\n        }\n    ],\n    \"schedules\": [\n        \"<SCHEDULE_1>\",\n        \"<SCHEDULE_2>\"\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/pagerduty?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "Configure your Datadog-PagerDuty integration directly through Datadog API.\nRead more about Datadog-PagerDuty integration\n\nARGUMENTS\nservices [required]:\nArray of PagerDuty service objects. Learn how to configure you Datadog service with PagerDuty documentation. A PagerDuty service object is composed by:\n\nservice_name [required]:\nYour Service name in PagerDuty.\n\nservice_key [required]:\nYour Service name associated service key in Pagerduty.\n\nsubdomain [required]:\nYour PagerDuty accounts personalized sub-domain name.\n\nschedules [required]: Array of your schedule URLs e.g:\n[\"https://my-pd.pagerduty.com/schedules#PCPYT4M\", \"https://my-pd.pagerduty.com/schedules#PKTPB7P\"]\n\napi_token [required]:\nYour PagerDuty API token.\n\nrun_check [optional, default=false]:\nDetermines if the integration install check is run before returning a response.\n\nIf true:\n\nThe install check is run\nIf there’s an error in the configuration the error is returned\nIf there’s no error, 204 No Content response code is returned\nIf false:\n\nWe return a 202 accepted\nInstall check is run after returning a response",
					"_postman_isSubFolder": true
				},
				{
					"name": "Slack",
					"item": [
						{
							"name": "Get Slack Configuration Details",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_hooks\": [\n        {\n            \"account\": \"Main_Account\",\n            \"url\": \"https://hooks.slack.com/services/1/1\"\n        },\n        {\n            \"account\": \"doghouse\",\n            \"url\": \"https://hooks.slack.com/services/2/2\"\n        }\n    ],\n    \"channels\": [\n        {\n            \"channel_name\": \"#private\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"Main_Account\"\n        },\n        {\n            \"channel_name\": \"#heresachannel\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"doghouse\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/slack?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Slack Configuration Details",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_hooks\": [\n        {\n            \"account\": \"Main_Account\",\n            \"url\": \"https://hooks.slack.com/services/1/1\"\n        },\n        {\n            \"account\": \"doghouse\",\n            \"url\": \"https://hooks.slack.com/services/2/2\"\n        }\n    ],\n    \"channels\": [\n        {\n            \"channel_name\": \"#private\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"Main_Account\"\n        },\n        {\n            \"channel_name\": \"#heresachannel\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"doghouse\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/slack?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Slack Configuration ",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_hooks\": [\n        {\n            \"account\": \"Main_Account\",\n            \"url\": \"https://hooks.slack.com/services/1/1\"\n        },\n        {\n            \"account\": \"doghouse\",\n            \"url\": \"https://hooks.slack.com/services/2/2\"\n        }\n    ],\n    \"channels\": [\n        {\n            \"channel_name\": \"#private\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"Main_Account\"\n        },\n        {\n            \"channel_name\": \"#heresachannel\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"doghouse\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/slack?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Configure your Datadog-Slack integration directly through Datadog API."
							},
							"response": []
						},
						{
							"name": "Update and Add Channels To Existing Configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channels\": [\n        {\n            \"channel_name\": \"<CHANNEL_NAME_3>\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"<SLACK_ACCOUNT_1>\"\n        },\n        {\n            \"channel_name\": \"<CHANNEL_NAME_4>\",\n            \"transfer_all_user_comments\": \"false\",\n            \"account\": \"<SLACK_ACCOUNT_2>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/slack?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "Configure your Datadog-Slack integration directly through Datadog API.\nRead more about Datadog-Slack integration\n\nARGUMENTS\nservice_hooks [required]:\nArray of service hook objects (the service hook is generated for your slack account in your Slack account administration page). A service hook object is composed by:\n\naccount [required]:\nYour Slack account name.\n\nurl [required]:\nYour Slack Service Hook URL.\n\nchannels [required]:\nArray of slack channel objects to post to. A slack channel object is composed by:\n\nchannel_name [required]:\nYour channel name e.g: #general, #private\n\ntransfer_all_user_comments [optional, default=False]:\nTo be notified for every comment on a graph, set it to true. If set to False use the @slack-channel_name syntax for comments to be posted to slack.\n\naccount [required]:\nAccount to which the channel belongs to.\n\nrun_check [optional, default=false]:\nDetermines if the integration install check is run before returning a response.\n\nIf true:\n\nThe install check is run\nIf there’s an error in the configuration the error is returned\nIf there’s no error, 204 No Content response code is returned\nIf false:\n\nWe return a 202 accepted\nInstall check is run after returning a response",
					"_postman_isSubFolder": true
				},
				{
					"name": "Webhooks",
					"item": [
						{
							"name": "Get all Webhook Configurations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n        {\n            \"name\": \"somehook\",\n            \"url\": \"http://requestb.in/v1srg7v1\",\n            \"use_custom_payload\": \"false\",\n            \"custom_payload\": \"\",\n            \"encode_as_form\": \"false\",\n            \"headers\": \"\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/webhooks?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Webhook Configurations",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n        {\n            \"name\": \"somehook\",\n            \"url\": \"http://requestb.in/v1srg7v1\",\n            \"use_custom_payload\": \"false\",\n            \"custom_payload\": \"\",\n            \"encode_as_form\": \"false\",\n            \"headers\": \"\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/webhooks?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add to Current Configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n        {\n            \"name\": \"somehook\",\n            \"url\": \"http://requestb.in/v1srg7v1\",\n            \"use_custom_payload\": \"false\",\n            \"custom_payload\": \"\",\n            \"encode_as_form\": \"false\",\n            \"headers\": \"\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/webhooks?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						},
						{
							"name": "Replace Current Configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hooks\": [\n        {\n            \"name\": \"anotherone\",\n            \"url\": \"http://requestb.in/v1srg7v1\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/integration/webhooks?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "ARGUMENTS\n\n"
							},
							"response": []
						}
					],
					"description": "Webhooks\nConfigure your Datadog-Webhooks integration directly through Datadog API.\nRead more about Datadog-Webhooks integration\n\nARGUMENTS\nhooks [required]:\nArray of Webhook objects. A Webhook object is composed by:\n\nname [required]:\nYour Webhook name.\nLearn more on how to use it in monitor notifications.\nurl [required]:\nYour Webhook URL.\nuse_custom_payload [optional, default=False]:\nIf true, allow you to specify a custom payload for your Webhook.\n\ncustom_payload [optional, default=None]:\nIf use_custom_payloag is true, specify your own payload to add your own custom fields to the request using those variables.\n\nencode_as_form [optional, default=False]:\nIf use_custom_payload is true, set this to true to have your payload to be URL-encoded.\n\nheaders [optional, default=None]:\nHeaders attached to your Webhook.\n\nrun_check [optional, default=false]:\nDetermines if the integration install check is run before returning a response.\n\nIf true:\n\nThe install check is run\nIf there’s an error in the configuration the error is returned\nIf there’s no error, 204 No Content response code is returned\nIf false:\n\nWe return a 202 accepted\nInstall check is run after returning a response",
					"_postman_isSubFolder": true
				}
			],
			"description": "Configure your Datadog integrations via Datadog API, current configurable integrations are:\n\nAWS\nPagerDuty\nSlack\nWebhooks\nAvailable Endpoints are:\n\nTo Create an integration in Datadog:\nPOST /api/v1/integration/<source_type_name>\n\nTo edit an integration configuration:\nPUT /api/v1/integration/<source_type_name>\n\nTo get an integration status:\nGET /api/v1/integration/<source_type_name>\n\nTo delete an integration from Datadog:\nDELETE /api/v1/integration/<source_type_name>",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cee8587f-57a4-4835-8a94-9db6cc75c767",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "81e73228-13c1-444f-8424-202bff06c2ec",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Key Management",
			"item": [
				{
					"name": "API Key",
					"item": [
						{
							"name": "Get all API Key",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/api_key?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"api_key"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Get all API key from a given Datadog Organization"
							},
							"response": []
						},
						{
							"name": "Create a new API Key",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<API_KEY_NAME>\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/api_key?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"api_key"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Create a new API key for your Datadog Account by providing its name."
							},
							"response": []
						},
						{
							"name": "Get a given API Key",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/api_key/:API_KEY?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"api_key",
										":API_KEY"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									],
									"variable": [
										{
											"key": "API_KEY",
											"value": "{{api_key_to_get}}"
										}
									]
								},
								"description": "Get a given API Key description from Datadog"
							},
							"response": []
						},
						{
							"name": "Edit a given API key",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<API_KEY_NAME>\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/api_key/:API_KEY?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"api_key",
										":API_KEY"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									],
									"variable": [
										{
											"key": "API_KEY",
											"value": "<API_KEY_TO_EDIT>"
										}
									]
								},
								"description": "Edit the name of a given API key."
							},
							"response": []
						},
						{
							"name": "Delete an API key",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/api_key/:API_KEY?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"api_key",
										":API_KEY"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}",
											"description": "Your Datadog API key"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									],
									"variable": [
										{
											"key": "API_KEY",
											"value": "<API_KEY_TO_DELETE>"
										}
									]
								},
								"description": "Delete a given API key"
							},
							"response": []
						}
					],
					"description": "Manage your Datadog API keys",
					"_postman_isSubFolder": true
				},
				{
					"name": "Application Key",
					"item": [
						{
							"name": "Get all Application Key",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/application_key?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"application_key"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Get all API key from a given Datadog Organization"
							},
							"response": []
						},
						{
							"name": "Create a new Application Key",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<APP_KEY_NAME>\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/application_key?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"application_key"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									]
								},
								"description": "Create a new API key for your Datadog Account by providing its name."
							},
							"response": []
						},
						{
							"name": "Get a given Application Key",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/application_key/:APP_KEY?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"application_key",
										":APP_KEY"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									],
									"variable": [
										{
											"key": "APP_KEY",
											"value": "<APP_KEY_TO_GET>"
										}
									]
								},
								"description": "Get a given API Key description from Datadog"
							},
							"response": []
						},
						{
							"name": "Edit a given Application key",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"<APP_KEY_NAME>\"\n}"
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/application_key/:APP_KEY?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"application_key",
										":APP_KEY"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									],
									"variable": [
										{
											"key": "APP_KEY",
											"value": "<APP_KEY_TO_EDIT>"
										}
									]
								},
								"description": "Edit the name of a given API key."
							},
							"response": []
						},
						{
							"name": "Delete an Application key",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://app.datadoghq.com/api/v1/application_key/:APP_KEY?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
									"protocol": "https",
									"host": [
										"app",
										"datadoghq",
										"com"
									],
									"path": [
										"api",
										"v1",
										"application_key",
										":APP_KEY"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{dd_api_key}}"
										},
										{
											"key": "application_key",
											"value": "{{dd_app_key}}"
										}
									],
									"variable": [
										{
											"key": "APP_KEY",
											"value": "<APP_KEY_TO_DELETE>"
										}
									]
								},
								"description": "Delete a given API key"
							},
							"response": []
						}
					],
					"description": "Manage your Datadog API keys",
					"_postman_isSubFolder": true
				}
			],
			"description": "Manage your Datdog API keys"
		},
		{
			"name": "Logs",
			"item": [
				{
					"name": "Send Logs Over HTTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"This is an example log message over HTTP!\",\n    \"http\": {\n        \"status_code\": 301,\n        \"method\": \"POST\",\n        \"request_id\": \"{{$randomInt}}\"\n    },\n    \"network\": {\n        \"client\": {\n            \"ip\": \"127.0.0.1\",\n            \"port\": \"80\"\n        },\n        \"destination\": {\n            \"ip\": \"10.0.0.1\"\n        }\n    },\n    \"duration\": 2000,\n    \"category\": \"test\"\n}"
						},
						"url": {
							"raw": "https://http-intake.logs.datadoghq.com/v1/input/{{dd_api_key}}?ddsource=agent&service=myService&hostname=myhost",
							"protocol": "https",
							"host": [
								"http-intake",
								"logs",
								"datadoghq",
								"com"
							],
							"path": [
								"v1",
								"input",
								"{{dd_api_key}}"
							],
							"query": [
								{
									"key": "ddsource",
									"value": "agent"
								},
								{
									"key": "service",
									"value": "myService"
								},
								{
									"key": "hostname",
									"value": "myhost"
								}
							]
						},
						"description": "Protocols\thttp: 80 or https: 443\n\nQuery parameters\t \nddsource=<SOURCE>\nservice=<SERVICE>\nhostname=<HOSTNAME>\n"
					},
					"response": []
				},
				{
					"name": "Get a list of logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0508c94e-6c5b-4440-9f9f-312195e3f325",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = -30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"limit\": 50,\n    \"query\": \"source:agent status:error\",\n    \"sort\": \"desc\",\n    \"time\": {\n        \"from\": \"{{from_date}}\",\n        \"to\": \"{{to_date}}\"\n    }\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/logs-queries/list?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"logs-queries",
								"list"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "List endpoint returns logs that match a log search query. Results are paginated.\n\nARGUMENTS\nquery [required]:\nThe search query - following the Log search syntax .\ntime.from [required]:\nMinimum timestamp for requested logs. Format can be either\nan ISO-8601 string\na unix timestamp (number representing the elapsed millisec since epoch)\ntime.to [required]:\nMaximum timestamp for requested logs. Format can be either\nan ISO-8601 string with minute, second or millisecond precision\na unix timestamp (number representing the elapsed millisec since epoch)\ntime.timezone [optional, default=None]: Can be specified both as an offset (e.g. “UTC+03:00”) or a regional zone (e.g. “Europe/Paris”)\ntime.offset [optional, default=None]: Equivalent to time.timezone. But value in seconds. If both timezone and offset are specified, timezone is ignored.\nstartAt [optional, default=None]:\nHash identifier of the first log to return in the list, available in a log id attribute. This parameter is used for the pagination feature. Note: this parameter is ignored if the corresponding log is out of the scope of the specified time window.\nsort [optional, default=desc]:\nTime-ascending asc or time-descending descresults.\nlimit [optional, default=10]:\nNumber of logs return in the response (maximum is 1000)\nindex [optional, default=main]:\nFor multi-index organizations, the log index in which the request is performed.\nPAGINATION\nRetrieve a log list longer than the 1000 logs limit with the Log List API Pagination feature:\n\nfor the first request, use no startAt parameter.\nfor the N-th request, use nextLogID of N-1th request result as the startAt parameter value.\nFor better control over pagination results, you should use an absolute time parameter - don’t use thenow keyword."
					},
					"response": []
				}
			],
			"description": "Send your logs to your Datadog platform over HTTP.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f3c90f9f-2f7b-4b10-9ff0-1e95bd405883",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "53b8551e-05d1-4b29-a168-9f304aa33165",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Metrics",
			"item": [
				{
					"name": "Get All Active Metrics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "757736b1-36c3-47a0-b919-3041e624db1f",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = -30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/metrics?api_key={{dd_api_key}}&application_key={{dd_app_key}}&from={{from_ts}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"metrics"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "from",
									"value": "{{from_ts}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n* from [required]\nseconds since the unix epoch"
					},
					"response": []
				},
				{
					"name": "POST Time Series Point",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5edede57-369e-4c98-b74c-267e1aa0f014",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"series\": [\n        {\n            \"host\": \"myhost\",\n            \"metric\": \"test.metric\",\n            \"points\": [\n                [\n                    \"{{$timestamp}}\",\n                    \"{{$randomInt}}\"\n                ]\n            ],\n            \"tags\": \"source:Postman,test\",\n            \"type\": \"gauge\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/series?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"series"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "The metrics end-point allows you to post time-series data that can be graphed on Datadog's dashboards.\n\nARGUMENTS\n\n*series [required]\nA JSON array of metrics where each item in the array contains the following arguments:\n\n*metric [required]\nThe name of the time series\n\n*points [required]\nA JSON array of points. Each point is of the form:\n[[POSIX_timestamp, numeric_value], ...]\nNote that the timestamp should be in seconds, must be current, and the numeric value is a 32bit float gauge-type value. Current is defined as not more than 10 minutes in the future or more than 1 hour in the past.\n\n*host [optional, default=None]\nThe name of the host that produced the metric.\n\n*tags [optional, default=None]\nA list of tags associated with the metric."
					},
					"response": []
				},
				{
					"name": "Query Time Series Points",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "059ebd69-505a-475f-ae87-ec5a88bf18a2",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = -30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/query?api_key={{dd_api_key}}&application_key={{dd_app_key}}&from={{from_ts}}&to={{to_ts}}&query=system.cpu.idle{*}by{host}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"query"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "from",
									"value": "{{from_ts}}"
								},
								{
									"key": "to",
									"value": "{{to_ts}}"
								},
								{
									"key": "query",
									"value": "system.cpu.idle{*}by{host}"
								}
							]
						},
						"description": "This end point allows you to query for metrics from any time period.\n\nARGUMENTS\n\n*from [required]\nseconds since the unix epoch\n\n*to [required]\nseconds since the unix epoch\n\n*query [required]\nThe query string\n\n\nQUERY LANGUAGE\n\nAny query used for a graph can be used here. See here for more details. The time between from and to should be less than 24 hours. If it is longer, you will receive points with less granularity."
					},
					"response": []
				},
				{
					"name": "View Metric Metadata",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/metrics/:METRIC_NAME?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								":METRIC_NAME"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "METRIC_NAME",
									"value": "system.cpu.system"
								}
							]
						},
						"description": "ARGUMENTS\n\nThis endpoint takes no JSON arguments"
					},
					"response": []
				},
				{
					"name": "Edit Metric Metadata",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"The percent of time the CPU spent running the kernel 2.\",\n    \"short_name\": \"cpu system\",\n    \"integration\": \"system\",\n    \"statsd_interval\": null,\n    \"per_unit\": null,\n    \"type\": \"gauge\",\n    \"unit\": \"percent\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/metrics/:METRIC_NAME?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								":METRIC_NAME"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "METRIC_NAME",
									"value": "system.cpu.system"
								}
							]
						},
						"description": "ARGUMENTS\n\nThe metrics metadata endpoint allows you to edit fields of a metric's metadata.\n\nARGUMENTS\n\n*type [optional, default=None]\nmetric type such as 'gauge' or 'rate'\n\n*description [optional, default=None]\nstring description of the metric\n\n*short_name [optional, default=None]\nshort name string of the metric\n\n*unit [optional, default=None]\nprimary unit of the metric such as 'byte' or 'operation'\n\n*per_unit [optional, default=None]\n'per' unit of the metric such as 'second' in 'bytes per second'\n\n*statsd_interval [optional, default=None]\nif applicable, statds flush interval in seconds for the metric"
					},
					"response": []
				},
				{
					"name": "Search Metrics",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/search?q=metrics:system.cpu&api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "metrics:system.cpu"
								},
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "The metrics end-point allows you to:\n\n*Post metrics data so it can be graphed on Datadog's dashboards\n\n*Query metrics from any time period\n\nAs occurs within the Datadog UI, a graph can only contain a set number of points and as the timeframe over which a metric is viewed increases, aggregation between points will occur to stay below that set number.\n\nThus, if you are querying for larger timeframes of data, the points returned will be more aggregated. The max granularity within Datadog is one point per second, so if you had submitted points at that interval and requested a very small interval from the query API (in this case, probably less than 100 seconds), you could end up getting all of those points back. Otherwise, our algorithm tries to return about 150 points per any given time window, so you'll see coarser and coarser granularity as the amount of time requested increases. We do this time aggregation via averages."
		},
		{
			"name": "Monitors",
			"item": [
				{
					"name": "Create a Monitor ",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"We may need to add web hosts if this is consistently high.\",\n    \"name\": \"Bytes received on host0\",\n    \"options\": {\n        \"no_data_timeframe\": 20,\n        \"notify_no_data\": true\n    },\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:myhost} > 100\",\n    \"tags\": [\n        \"app:webserver\",\n        \"frontend\"\n    ],\n    \"type\": \"metric alert\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "http://docs.datadoghq.com/api/?lang=console#monitors"
					},
					"response": []
				},
				{
					"name": "Get a Monitor's Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/:MONITOR_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":MONITOR_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "MONITOR_ID",
									"value": ""
								}
							]
						},
						"description": "ARGUMENTS\n\n*group_states [optional, default=None]\n\nIf this argument is set, the returned data will include additional information (if available) regarding the specified group states, including the last notification timestamp, last resolution timestamp and details about the last time the monitor was triggered. The argument should include a string list indicating what, if any, group states to include. Choose one or more from 'all', 'alert', 'warn', or 'no data'. Example: 'alert,warn'"
					},
					"response": []
				},
				{
					"name": "Edit a Monitor's Details",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"created\": \"2018-04-25T16:06:10.564735+00:00\",\n    \"created_at\": 1524672370000,\n    \"creator\": {\n        \"email\": \"test@datadoghq.com\",\n        \"handle\": \"test@datadoghq.com\",\n        \"id\": 580920,\n        \"name\": \"Testy McTestingson\"\n    },\n    \"deleted\": null,\n    \"id\": 4769031,\n    \"matching_downtimes\": [],\n    \"message\": \"Example Windows Service Check for {{service.name}} on {{host.name}}\",\n    \"modified\": \"2018-04-25T16:06:10.564735+00:00\",\n    \"multi\": true,\n    \"name\": \"Windows Service Check\",\n    \"options\": {\n        \"locked\": false,\n        \"new_host_delay\": 300,\n        \"no_data_timeframe\": 2,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"renotify_interval\": 0,\n        \"silenced\": {},\n        \"thresholds\": {\n            \"critical\": 3,\n            \"ok\": 3,\n            \"warning\": 3\n        },\n        \"timeout_h\": 0\n    },\n    \"org_id\": 12345,\n    \"overall_state\": \"No Data\",\n    \"overall_state_modified\": null,\n    \"query\": \"\\\"windows_service.state\\\".over(\\\"host:GamingPC\\\",\\\"service:termservice\\\").by(\\\"host\\\",\\\"service\\\").last(4).count_by_status()\",\n    \"tags\": [],\n    \"type\": \"service check\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/:MONITOR_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":MONITOR_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "MONITOR_ID",
									"value": ""
								}
							]
						},
						"description": "ARGUMENTS\n\n*query [required]\nThe metric query to alert on.\n\n*name [optional, default=dynamic, based on query]\nThe name of the monitor.\n\n*message [optional, default=dynamic, based on query]\nA message to include with notifications for this monitor. Email notifications can be sent to specific users by using the same '@username' notation as events.\n\n*options [optional, default=None]\nRefer to the create monitor documentation for details on the available options.\n\n*tags [optional, default=empty list]\nA list of tags to associate with your monitor. This can help you categorize and filter monitors."
					},
					"response": []
				},
				{
					"name": "DELETE a Monitor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/:MONITOR_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":MONITOR_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "MONITOR_ID",
									"value": ""
								}
							]
						},
						"description": "ARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "GET All Monitor Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*group_states [optional, default=None]\nIf this argument is set, the returned data will include additional information (if available) regarding the specified group states, including the last notification timestamp, last resolution timestamp and details about the last time the monitor was triggered. The argument should include a string list indicating what, if any, group states to include. Choose one or more from 'all', 'alert', 'warn', or 'no data'. Example: 'alert,warn'\n\n*name [optional, default=None]\nA string to filter monitors by name\n\n*tags [optional, default=None]\nA comma separated list indicating what tags, if any, should be used to filter the list of monitors by scope, e.g. host:host0. For more information, see the tags parameter for the appropriate query argument in the Create a monitor section above.\n\n*monitor_tags [optional, default=None]\nA comma separated list indicating what service and/or custom tags, if any, should be used to filter the list of monitors. Tags created in the Datadog UI will automatically have the \"service\" key prepended (e.g. service:my-app)"
					},
					"response": []
				},
				{
					"name": "Resolve Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"resolve\": [\n        {\n            \"2376503\": \"*\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/monitor/bulk_resolve?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"monitor",
								"bulk_resolve"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Here you can resolve a monitor by monitorId & Group (can wildcard).\n\nresolve [required]: Array of group(s) to resolve for a given monitor_id, e.g.: {\"monitor_id\": \"group_to_resolve\"}\n\nIt supports multiple groups per monitor, e.g.: resolve: [{\"monitor_id\": \"group_1\"}, {\"monitor_id\": \"group_2\"}]\n\nIt can also resolve all triggered groups with the pseudo-group ALL_GROUPS: resolve: [{\"monitor_id\": \"ALL_GROUPS\"}]"
					},
					"response": []
				},
				{
					"name": "Mute All Monitors",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/mute_all?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"mute_all"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Muting will prevent all monitors from notifying through email and posts to the event stream. State changes will only be visible by checking the alert page.\n\nARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Unmute All Monitors",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/unmute_all?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"unmute_all"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Disables muting all monitors. Throws an error if mute all was not enabled previously.\n\nARGUMENTS\n\nThis end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Mute A Specific Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"metric alert\",\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:myhost} > 100\",\n    \"name\": \"Bytes received on myhost\",\n    \"message\": \"We may need to add web hosts if this is consistently high.\",\n    \"tags\": [\n        \"app:webserver\",\n        \"frontend\"\n    ],\n    \"options\": {\n        \"notify_no_data\": true,\n        \"no_data_timeframe\": 20\n    }\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/1959920/mute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"1959920",
								"mute"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\n*scope [optional, default=None]\nThe scope to apply the mute to, e.g. role:db\n\n*end [optional, default=None]\nA POSIX timestamp for when the mute should end"
					},
					"response": []
				},
				{
					"name": "Unmute A Specific Monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"metric alert\",\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:myhost} > 100\",\n    \"name\": \"Bytes received on myhost\",\n    \"message\": \"We may need to add web hosts if this is consistently high.\",\n    \"tags\": [\n        \"app:webserver\",\n        \"frontend\"\n    ],\n    \"options\": {\n        \"notify_no_data\": true,\n        \"no_data_timeframe\": 20\n    }\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/monitor/:MONITOR_ID/unmute?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":MONITOR_ID",
								"unmute"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "MONITOR_ID",
									"value": ""
								}
							]
						},
						"description": "ARGUMENTS\n\n*scope [optional, default=None]\nThe scope to apply the mute to. For example, if your alert is grouped by {host}, you might mute 'host:app1'\n\n*all_scopes [optional, default=False]\nClear muting across all scopes"
					},
					"response": []
				},
				{
					"name": "Validate a Monitor Definitions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"metric alert\",\n    \"query\": \"THIS QUERY IS INVALID\",\n    \"name\": \"Bytes received on myhost\",\n    \"message\": \"We may need to add web hosts if this is consistently high.\",\n    \"tags\": [\n        \"app:webserver\",\n        \"frontend\"\n    ],\n    \"options\": {\n        \"notify_no_data\": true,\n        \"no_data_timeframe\": 20\n    }\n}"
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/monitor/validate?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"validate"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\ntype [required]:\nThe type of the monitor, chosen from:\nMONITOR TYPE\tTYPE ATTRIBUTE VALUE\nanomaly\tquery alert\napm\tquery alert\ncomposite\tcomposite\ncustom\tservice check\nevent\tevent alert\nforecast\tquery alert\nhost\tservice check\nintegration\tquery alert\nlive process\tprocess alert\nlogs\tlog alert\nmetric\tquery alert\nnetwork\tservice check\noutlier\tquery alert\nprocess\tservice check\nquery [required]:\nThe query defines when the monitor triggers. Query syntax depends on monitor type. See Create a monitor for details."
					},
					"response": []
				},
				{
					"name": "Monitor Search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/monitor/search?api_key={{dd_api_key}}&application_key={{dd_app_key}}&query=CPU High",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"search"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "query",
									"value": "CPU High",
									"description": "[optional], After entering a search query in your Manage Monitor page use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated manage monitor documentation page to learn more."
								},
								{
									"key": "page",
									"value": "insert pagination number here",
									"description": "[optional, default = 0], Page to start paginating from.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "insert value here",
									"description": "[optional, default=30],  Number of monitors to return per page.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "insert value here",
									"description": "[optional, default=null], Comma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags",
									"disabled": true
								}
							]
						},
						"description": "Search and filter your monitors details.\n\nARGUMENTS\nquery [optional]:\n\nAfter entering a search query in your Manage Monitor page use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated manage monitor documentation page to learn more.\n\npage [optional, default = 0]:\n\nPage to start paginating from.\n\nper_page [optional, default=30]:\n\nNumber of monitors to return per page.\n\nsort [optional, default=null]:\n\nComma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags"
					},
					"response": []
				},
				{
					"name": "Monitor Group Search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.datadoghq.com/api/v1/monitor/groups/search?api_key={{dd_api_key}}&application_key={{dd_app_key}}&query=ELB",
							"protocol": "https",
							"host": [
								"api",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"groups",
								"search"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "query",
									"value": "ELB",
									"description": "[optional], After entering a search query in your Manage Monitor page use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated manage monitor documentation page to learn more."
								},
								{
									"key": "page",
									"value": "insert pagination number here",
									"description": "[optional, default = 0], Page to start paginating from.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "insert value here",
									"description": "[optional, default=30],  Number of monitors to return per page.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "insert value here",
									"description": "[optional, default=null], Comma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags",
									"disabled": true
								}
							]
						},
						"description": "Search and filter your monitor groups details.\n\nARGUMENTS\nquery [optional]:\n\nAfter entering a search query in your Manage Monitor page use the query parameter value in the URL of the page as value for this parameter. Consult the dedicated manage monitor documentation page to learn more.\n\npage [optional, default = 0]:\n\nPage to start paginating from.\n\nper_page [optional, default=30]:\n\nNumber of monitors to return per page.\n\nsort [optional, default=null]:\n\nComma separated string for sort order (e.g. name,asc) supported fields:\n\nname\nstatus\ntags"
					},
					"response": []
				}
			],
			"description": "Monitors allow you to watch a metric or check that you care about, notifying your team when some defined threshold is exceeded. Please refer to the Guide to Monitors for more information on creating monitors."
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Create child-organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Setup Child Org Via API\",\n    \"subscription\": {\n        \"type\": \"pro\"\n    },\n    \"billing\": {\n        \"type\": \"parent_billing\"\n    }\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/org?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"org"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "create child org, based off api_key and app_key"
					},
					"response": []
				},
				{
					"name": "Get Organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/org/:PUBLIC_ID?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"org",
								":PUBLIC_ID"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "PUBLIC_ID",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Organizations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/org?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"org"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Organization",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"settings\": {\n        \"saml\": {\n            \"enabled\": false\n        },\n        \"saml_strict_mode\": {\n            \"enabled\": false\n        },\n        \"saml_idp_initiated_login\": {\n            \"enabled\": false\n        },\n        \"saml_autocreate_users_domains\": {\n            \"enabled\": false,\n            \"domains\": [\n                \"my-org.com\",\n                \"example.com\"\n            ]\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/org/:PUBLIC_ID",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"org",
								":PUBLIC_ID"
							],
							"variable": [
								{
									"key": "PUBLIC_ID",
									"value": ""
								}
							]
						},
						"description": "ARGUMENTS\nname [optional]:\nThe organization name.\nsettings [optional]:\nA JSON array of settings. Settings include:\nsaml - Set the boolean property enabled to enable or disable single sign on with SAML. See the SAML documentation for more information about all SAML settings.\nsaml_idp_initiated_login - has one property enabled (boolean).v\nsaml_strict_mode - has one property enabled (boolean).\nsaml_autocreate_users_domains - has two properties: enabled (boolean) and domains which is a list of domains without the @ symbol."
					},
					"response": []
				},
				{
					"name": "Upload iDP metadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"settings\": {\n        \"saml\": {\n            \"enabled\": true\n        },\n        \"saml_autocreate_users_domains\": {\n            \"domains\": [\n                \"my-org.com\",\n                \"example.com\"\n            ],\n            \"enabled\": true\n        },\n        \"saml_idp_initiated_login\": {\n            \"enabled\": true\n        },\n        \"saml_strict_mode\": {\n            \"enabled\": true\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/org/:PUBLIC_ID/idp_metadata",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"org",
								":PUBLIC_ID",
								"idp_metadata"
							],
							"variable": [
								{
									"key": "PUBLIC_ID",
									"value": ""
								}
							]
						},
						"description": "ARGUMENTS\nidp_file [required]:\nThe path to the XML metadata file you wish to upload."
					},
					"response": []
				}
			],
			"description": "This endpoint requires the multi-org account feature and must be enabled by contacting support.\n\nMulti-org feature:https://docs.datadoghq.com/account_management/multi_organization\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4bfcbf69-1cf1-43f5-bcb1-7eb0e3d3b95f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8192426f-c281-4ad7-88a5-012c97209c9c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Get Tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/tags/hosts?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "Return a mapping of tags to hosts for your whole infrastructure.\n\nARGUMENTS\nsource [optional, default=None]:\nOnly show tags from a particular source. Otherwise shows all tags.\nComplete list of source attribute values"
					},
					"response": []
				},
				{
					"name": "Get host tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/tags/hosts/:HOSTNAME?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":HOSTNAME"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "myhost"
								}
							]
						},
						"description": "Get all host tags by hostname"
					},
					"response": []
				},
				{
					"name": "Add tags to a host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tags\": [\n        \"environment:production\",\n        \"role:webserver\"\n    ]\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/tags/hosts/:HOSTNAME?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":HOSTNAME"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "myhost"
								}
							]
						},
						"description": "This end point allows you to add new tags to a host, optionally specifying where these tags come from.\n\nARGUMENTS\n\ntags [required]:\nA list of tags to apply to the host\n\nsource [optional, default=users]:\nThe source of the tags (e.g. chef, puppet).\n"
					},
					"response": []
				},
				{
					"name": "Update host tags",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tags\": [\n        \"environment:production\",\n        \"role:webserver\"\n    ]\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/tags/hosts/:HOSTNAME?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":HOSTNAME"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "myhost"
								}
							]
						},
						"description": "This end point allows you to update/replace all tags in an integration source with those supplied in the request.\n\nARGUMENTS\ntags [required]:\nA list of tags\nsource [optional, default=users]:\nThe source of the tags (e.g. chef, puppet).\nComplete list of source attribute values"
					},
					"response": []
				},
				{
					"name": "Remove host tags",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/tags/hosts/:HOSTNAME?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":HOSTNAME"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "HOSTNAME",
									"value": "myhost"
								}
							]
						},
						"description": "This end point allows you to remove all tags in an integration source for a single host.\n\nARGUMENTS\nsource [optional, default=users]:\nThe source of the tags (e.g. chef, puppet)."
					},
					"response": []
				}
			],
			"description": "The tag end point allows you to tag hosts with keywords meaningful to you - like role:database. All metrics sent from a host will have its tags applied. When fetching and applying tags to a particular host, you can refer to hosts by name (yourhost.example.com).\n\nThe component of your infrastructure responsible for a tag is identified by a source. Valid sources are: nagios, hudson, jenkins, users, feed, chef, puppet, git, bitbucket, fabric, capistrano."
		},
		{
			"name": "Tracing",
			"item": [
				{
					"name": "Send traces",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4498d5f5-38b7-41d5-ab34-6c83ed1246f0",
								"exec": [
									"// Set current date and time",
									"// YYYY-MM-ddTHH:mm:ss.SSSZ",
									"var curr_date = (new Date());",
									"var from_date = (new Date());",
									"var to_date = (new Date());",
									"",
									"// Set timeframe window in minutes",
									"// Positive number sets to_date forward",
									"// Negative number sets from_date backwards",
									"var window_minutes = -30",
									"if (window_minutes > 0) {",
									"    // Look ahead: adjusts to_date",
									"    to_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"} else {",
									"    // Look behind: adjusts from_date",
									"    from_date.setMinutes(curr_date.getMinutes()+window_minutes);",
									"}",
									"",
									"// timestamp in ms",
									"var from_ts_ms = parseInt(Math.floor(from_date.getTime()));",
									"var to_ts_ms = parseInt(Math.floor(to_date.getTime()));",
									"// timestamp in seconds",
									"var from_ts = parseInt(from_ts_ms/1000);",
									"var to_ts = parseInt(to_ts_ms/1000);",
									"// timestamp in ns",
									"var from_ts_ns = parseInt(from_ts_ms*1000);",
									"var to_ts_ns = parseInt(to_ts_ms*1000);",
									"",
									"//// Uncomment for debugging.",
									"// console.log(from_date);",
									"// console.log(from_ts_ms);",
									"// console.log(from_ts);",
									"",
									"// console.log(to_date);",
									"// console.log(to_ts_ms);",
									"// console.log(to_ts);",
									"",
									"//// Set as Postman variables",
									"pm.environment.set(\"from_date\", from_date);",
									"pm.environment.set(\"from_ts_ms\", from_ts_ms);",
									"pm.environment.set(\"from_ts\", from_ts);",
									"",
									"pm.environment.set(\"to_date\", to_date);",
									"pm.environment.set(\"to_ts_ms\", to_ts_ms);",
									"pm.environment.set(\"to_ts\", to_ts);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    [\n        {\n            \"trace_id\": \"{{guid}}\",\n            \"span_id\": \"{{guid}}\",\n            \"name\": \"span_name\",\n            \"resource\": \"/home\",\n            \"service\": \"service_name\",\n            \"type\": \"web\",\n            \"start\": \"{{from_ts_ns}}\",\n            \"duration\": \"2000000000\"\n        }\n    ]\n]"
						},
						"url": {
							"raw": "http://localhost:8126/v0.3/traces",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8126",
							"path": [
								"v0.3",
								"traces"
							]
						},
						"description": "Datadog’s APM allows you to collect performance metrics by tracing your code to determine which parts of your application are slow or inefficient.\n\nTracing data is sent to the Datadog Agent via an HTTP API. We provide some official libraries that simplify sending metrics to the Datadog Agent, however you may want to interact directly with the API to instrument applications that cannot use the libraries or are written in languages that don’t yet have an official Datadog Tracing library.\n\nTraces can be sent as an array of traces:\n\n[ trace1, trace2, trace3 ]\nand each trace is an array of spans:\n\ntrace1 = [ span, span2, span3 ]\nand each span is a dictionary with a trace_id, span_id, resource..\n\n"
					},
					"response": []
				},
				{
					"name": "Send services",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_name\": {\n        \"app\": \"my-app\",\n        \"app_type\": \"web\"\n    }\n}"
						},
						"url": {
							"raw": "http://localhost:8126/v0.3/services",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8126",
							"path": [
								"v0.3",
								"services"
							]
						},
						"description": "https://docs.datadoghq.com/api/?lang=bash#send-traces"
					},
					"response": []
				}
			]
		},
		{
			"name": "Usage Metering",
			"item": [
				{
					"name": "GET Hourly Usage For Hosts and Containers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "86c2f87a-0c50-4e0e-82cc-a27b79513156",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/hosts?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start_hr=2019-04-01T00&end_hr=2019-04-03T00",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"hosts"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start_hr",
									"value": "2019-04-01T00",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "2019-04-03T00",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour"
								}
							]
						},
						"description": "Get Hourly Usage For Hosts and Containers.\n\nArguments\nstart_hr [required]:\ndatetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour\nend_hr [optional, default=1d+start_hr]:\ndatetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n\n\nResponse\ncontainer_count:\nShows the total number of containers reporting via the Docker integration during the hour.\nhost_count:\nContains the total number of billable infrastructure hosts reporting during a given hour. This is the sum of agent_host_count, aws_host_count, and gcp_host_count.\nhour:\nThe hour for the usage.\napm_host_count:\nShows the total number of hosts using APM during the hour. For Pro plans, these are counted as billable (except during trial periods). For Enterprise plans, APM hosts are included in the price of infrastructure hosts (see host_count) and not billed separately.\nagent_host_count:\nContains the total number of infrastructure hosts reporting during a given hour that were running the Datadog Agent.\ngcp_host_count:\nContains the total number of hosts that reported via the Google Cloud integration (and were NOT running the Datadog Agent).\naws_host_count:\nContains the total number of hosts that reported via the AWS integration (and were NOT running the Datadog Agent). When AWS or GCP hosts are also running the Datadog Agent, they are counted as Agent hosts, NOT as AWS or GCP"
					},
					"response": []
				},
				{
					"name": "Get hourly usage for logs",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/logs?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start_hr=2019-04-01T00&end_hr=2019-04-03T00",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"logs"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start_hr",
									"value": "2019-04-01T00",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "2019-04-03T00",
									"description": "datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour"
								}
							]
						},
						"description": "Get Hourly Usage For Logs.\n\nArguments\n\nstart_hr [required]: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour\n\nend_hr [optional, default=1d+start_hr]: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n\n\nResponse\n\ningested_events_bytes: Contains the number of log bytes ingested.\n\nindexed_events_count: Contains the number of log events indexed.\n\nhour: The hour for the usage."
					},
					"response": []
				},
				{
					"name": "GET Hourly Usage for Custom Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/timeseries?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start_hr=2019-04-01T00&end_hr=2019-04-03T00",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"timeseries"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start_hr",
									"value": "2019-04-01T00",
									"description": "Required: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "2019-04-03T00",
									"description": "Optional: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour"
								}
							]
						},
						"description": "Get Top Custom Metrics By Hourly Average.\n\nArguments\nmonth [required]:\ndatetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour.\n\nnames [optional, default=None]:\nComma-separated list of metric names."
					},
					"response": []
				},
				{
					"name": "GET Top 500 Custom Metrics by hourly average",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/top_avg_metrics?api_key={{dd_api_key}}&application_key={{dd_app_key}}&month=2019-04&names=aws.ec2.spot_history,system.processes.number",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"top_avg_metrics"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "month",
									"value": "2019-04",
									"description": "Required: datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour."
								},
								{
									"key": "names",
									"value": "aws.ec2.spot_history,system.processes.number",
									"description": "optional: comma-separated list of metric names "
								}
							]
						},
						"description": "Get Top Custom Metrics By Hourly Average.\n\nArguments\nmonth [required]:\ndatetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour.\nnames [optional, default=None]:\nComma-separated list of metric names."
					},
					"response": []
				},
				{
					"name": "GET Multi-Org Usage Details",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/summary?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start_month=2019-04",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"summary"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start_month",
									"value": "2019-04",
									"description": "[required]:\nDatetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning in this month. Maximum of 15 months ago."
								},
								{
									"key": "end_month",
									"value": "2019-04",
									"description": "[optional, default=current_month-3d]: Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage ending this month.",
									"disabled": true
								},
								{
									"key": "include_org_ids",
									"value": "",
									"description": "[optional, default=true]: Include usage summaries for each sub-org.",
									"disabled": true
								}
							]
						},
						"description": "Get usage across your multi-org account\n\nArguments\nstart_month [required]:\nDatetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning in this month. Maximum of 15 months ago.\nend_month [optional, default=current_month-3d]: Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage ending this month.\ninclude_org_details [optional, default=true]: Include usage summaries for each sub-org."
					},
					"response": []
				},
				{
					"name": "Get hourly usage for Trace Search",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/usage/traces?api_key={{dd_api_key}}&application_key={{dd_app_key}}&start_hr=2019-04-04T02",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"traces"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								},
								{
									"key": "start_hr",
									"value": "2019-04-04T02",
									"description": "Required: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour"
								},
								{
									"key": "end_hr",
									"value": "",
									"description": "[optional, default=1d+start_hr]: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour",
									"disabled": true
								}
							]
						},
						"description": "Get hourly usage For Trace Search.\n\nArguments\n\nstart_hr [required]: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour\n\nend_hr [optional, default=1d+start_hr]: datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending BEFORE this hour\n\n\nResponse\n\nindexed_events_count: Contains the number of Trace Search events indexed.\n\nhour: The hour for the usage."
					},
					"response": []
				}
			],
			"description": "This API is currently in private beta. Python and Ruby clients are not yet supported.\n\nThe usage metering end-point allows you to:\n\nGet Hourly Usage For Hosts and Containers\nGet Hourly Usage For Custom Metrics\nGet Top Custom Metrics By Hourly Average\nUsage data is delayed by up to 72 hours from when it was incurred. It is retained for the past 15 months."
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Create user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"disabled\": false,\n    \"handle\": \"test@datadoghq.com\",\n    \"name\": \"Test User\",\n    \"is_admin\": true,\n    \"role\": null,\n    \"access_role\": \"adm\",\n    \"verified\": true,\n    \"email\": \"test@datadoghq.com\",\n    \"icon\": \"https://secure.gravatar.com/avatar/df46ee85ff1cbb518b20c8cab742b9ea?s=48&d=retro\"\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "ARGUMENTS\n\nhandle [required]:\nThe user handle, must be a valid email.\nname [optional, default=None]:\nThe name of the user.\naccess_role [optional, default=st]:\nThe access role of the user. Choose from:\nst (standard user),\nadm (admin user),\nro (read-only user).\nNote: users can be created with admin access role only with application keys belonging to administrators."
					},
					"response": []
				},
				{
					"name": "Get user",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user/:USER_HANDLE?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user",
								":USER_HANDLE"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "USER_HANDLE",
									"value": "test@datadoghq.com",
									"description": "Usually the same as the email address"
								}
							]
						},
						"description": "id [required]:\nThe handle of the user."
					},
					"response": []
				},
				{
					"name": "Get all users",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							]
						},
						"description": "This end point takes no JSON arguments."
					},
					"response": []
				},
				{
					"name": "Update user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user\": {\n        \"disabled\": false,\n        \"handle\": \"test@datadoghq.com\",\n        \"name\": \"Testy McTestingson\",\n        \"is_admin\": true,\n        \"role\": null,\n        \"access_role\": \"adm\",\n        \"verified\": true,\n        \"email\": \"test@datadoghq.com\",\n        \"icon\": \"https://secure.gravatar.com/avatar/df46ee85ff1cbb518b20c8cab742b9ea?s=48&d=retro\"\n    }\n}"
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user/:USER_HANDLE?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user",
								":USER_HANDLE"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "USER_HANDLE",
									"value": "test@datadoghq.com"
								}
							]
						},
						"description": "ARGUMENTS\n\nid [required]:\nThe handle of the user.\nname [optional, default=None]:\nThe new name of the user.\nemail [optional, default=None]:\nThe new email of the user.\ndisabled [optional, default=None]:\nThe new disabled status of the user.\naccess_role [optional, default=st]:\nThe access role of the user. Choose from:\nst (standard user),\nadm (admin user),\nro (read-only user)."
					},
					"response": []
				},
				{
					"name": "Disable user",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://app.datadoghq.com/api/v1/user/:USER_HANDLE?api_key={{dd_api_key}}&application_key={{dd_app_key}}",
							"protocol": "https",
							"host": [
								"app",
								"datadoghq",
								"com"
							],
							"path": [
								"api",
								"v1",
								"user",
								":USER_HANDLE"
							],
							"query": [
								{
									"key": "api_key",
									"value": "{{dd_api_key}}"
								},
								{
									"key": "application_key",
									"value": "{{dd_app_key}}"
								}
							],
							"variable": [
								{
									"key": "USER_HANDLE",
									"value": "test@datadoghq.com"
								}
							]
						},
						"description": "ARGUMENTS\nid [required]:\nThe handle of the user."
					},
					"response": []
				}
			],
			"description": "You can create, edit, and disable users."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c41623be-f6de-4e50-b2d7-a774bd352140",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "72537730-7e9d-49b3-96a1-49995ee97eba",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "ae54c8e4-523f-43ae-9f0f-3cb148ffea5a",
			"key": "dd_api_key",
			"value": "xxxxx",
			"type": "string"
		},
		{
			"id": "a3db5baf-b743-4ff9-947b-37f23edce215",
			"key": "dd_app_key",
			"value": "yyyyy",
			"type": "string"
		}
	]
}